{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\nconst routes = {\n  home: {\n    path: \"/\",\n    component: Todos,\n    private: true,\n    routes: {\n      login: {\n        path: \"/login\",\n        component: Login,\n        private: false\n      }\n    },\n    noMatch: {\n      path: \"*\",\n      component: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"No Match\"\n      }, void 0, false),\n      private: false\n    }\n  }\n};\n\nfunction RouteWrap(route) {\n  return !route.priavte ? /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path,\n    render: () => /*#__PURE__*/_jsxDEV(route.component, {\n      component: route.component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: routes.login.path,\n      state: {\n        from: route.path\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RouteWrap;\n\nfunction RouteWithSubRoutes(route) {\n  return Object.values(route.routes).map(route => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, {\n    path: route.path,\n    component: route.component,\n    priavte: route.private && !authState.signIn,\n    routes: route.routes\n  }, route.path, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this));\n}\n\n_c2 = RouteWithSubRoutes;\n\nfunction RouteConfig(props) {\n  const {\n    authState\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: Object.values(routes).map(route => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, {\n        path: route.path,\n        component: route.component,\n        priavte: route.private && !authState.signIn,\n        routes: route.routes\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = RouteConfig;\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  }\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  })\n};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"RouteWrap\");\n$RefreshReg$(_c2, \"RouteWithSubRoutes\");\n$RefreshReg$(_c3, \"RouteConfig\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","BrowserRouter","Router","Switch","Route","Redirect","PropTypes","Login","Todos","routes","home","path","component","private","login","noMatch","RouteWrap","route","priavte","pathname","state","from","RouteWithSubRoutes","Object","values","map","authState","signIn","RouteConfig","props","defaultProps","propTypes","exact","bool","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst routes = {\n  home: {\n    path: \"/\",\n    component: Todos,\n    private: true,\n    routes: {\n      login: {\n        path: \"/login\",\n        component: Login,\n        private: false,\n      },\n    },\n    noMatch: {\n      path: \"*\",\n      component: <>No Match</>,\n      private: false,\n    },\n  },\n};\n\nfunction RouteWrap(route) {\n  return !route.priavte ? (\n    <Route\n      path={route.path}\n      render={() => <route.component component={route.component} />}\n    />\n  ) : (\n    <Redirect\n      to={{\n        pathname: routes.login.path,\n        state: { from: route.path },\n      }}\n    />\n  );\n}\n\nfunction RouteWithSubRoutes(route) {\n  return Object.values(route.routes).map((route) => (\n    <RouteWithSubRoutes\n      key={route.path}\n      path={route.path}\n      component={route.component}\n      priavte={route.private && !authState.signIn}\n      routes={route.routes}\n    />\n  ));\n}\n\nfunction RouteConfig(props) {\n  const { authState } = props;\n  return (\n    <Router>\n      <Switch>\n        {Object.values(routes).map((route) => (\n          <RouteWithSubRoutes\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            priavte={route.private && !authState.signIn}\n            routes={route.routes}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n};\n\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}