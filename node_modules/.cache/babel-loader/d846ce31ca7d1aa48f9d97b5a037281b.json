{"ast":null,"code":"let parser = require('postcss-value-parser');\n\nlet Value = require('./value');\n\nlet insertAreas = require('./hacks/grid-utils').insertAreas;\n\nconst OLD_LINEAR = /(^|[^-])linear-gradient\\(\\s*(top|left|right|bottom)/i;\nconst OLD_RADIAL = /(^|[^-])radial-gradient\\(\\s*\\d+(\\w*|%)\\s+\\d+(\\w*|%)\\s*,/i;\nconst IGNORE_NEXT = /(!\\s*)?autoprefixer:\\s*ignore\\s+next/i;\nconst GRID_REGEX = /(!\\s*)?autoprefixer\\s*grid:\\s*(on|off|(no-)?autoplace)/i;\nconst SIZES = ['width', 'height', 'min-width', 'max-width', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size'];\n\nfunction hasGridTemplate(decl) {\n  return decl.parent.some(i => i.prop === 'grid-template' || i.prop === 'grid-template-areas');\n}\n\nfunction hasRowsAndColumns(decl) {\n  let hasRows = decl.parent.some(i => i.prop === 'grid-template-rows');\n  let hasColumns = decl.parent.some(i => i.prop === 'grid-template-columns');\n  return hasRows && hasColumns;\n}\n\nclass Processor {\n  constructor(prefixes) {\n    this.prefixes = prefixes;\n  }\n  /**\n   * Add necessary prefixes\n   */\n\n\n  add(css, result) {\n    // At-rules\n    let resolution = this.prefixes.add['@resolution'];\n    let keyframes = this.prefixes.add['@keyframes'];\n    let viewport = this.prefixes.add['@viewport'];\n    let supports = this.prefixes.add['@supports'];\n    css.walkAtRules(rule => {\n      if (rule.name === 'keyframes') {\n        if (!this.disabled(rule, result)) {\n          return keyframes && keyframes.process(rule);\n        }\n      } else if (rule.name === 'viewport') {\n        if (!this.disabled(rule, result)) {\n          return viewport && viewport.process(rule);\n        }\n      } else if (rule.name === 'supports') {\n        if (this.prefixes.options.supports !== false && !this.disabled(rule, result)) {\n          return supports.process(rule);\n        }\n      } else if (rule.name === 'media' && rule.params.includes('-resolution')) {\n        if (!this.disabled(rule, result)) {\n          return resolution && resolution.process(rule);\n        }\n      }\n\n      return undefined;\n    }); // Selectors\n\n    css.walkRules(rule => {\n      if (this.disabled(rule, result)) return undefined;\n      return this.prefixes.add.selectors.map(selector => {\n        return selector.process(rule, result);\n      });\n    });\n\n    function insideGrid(decl) {\n      return decl.parent.nodes.some(node => {\n        if (node.type !== 'decl') return false;\n        let displayGrid = node.prop === 'display' && /(inline-)?grid/.test(node.value);\n        let gridTemplate = node.prop.startsWith('grid-template');\n        let gridGap = /^grid-([A-z]+-)?gap/.test(node.prop);\n        return displayGrid || gridTemplate || gridGap;\n      });\n    }\n\n    function insideFlex(decl) {\n      return decl.parent.some(node => {\n        return node.prop === 'display' && /(inline-)?flex/.test(node.value);\n      });\n    }\n\n    let gridPrefixes = this.gridStatus(css, result) && this.prefixes.add['grid-area'] && this.prefixes.add['grid-area'].prefixes;\n    css.walkDecls(decl => {\n      if (this.disabledDecl(decl, result)) return undefined;\n      let parent = decl.parent;\n      let prop = decl.prop;\n      let value = decl.value;\n\n      if (prop === 'grid-row-span') {\n        result.warn('grid-row-span is not part of final Grid Layout. Use grid-row.', {\n          node: decl\n        });\n        return undefined;\n      } else if (prop === 'grid-column-span') {\n        result.warn('grid-column-span is not part of final Grid Layout. Use grid-column.', {\n          node: decl\n        });\n        return undefined;\n      } else if (prop === 'display' && value === 'box') {\n        result.warn('You should write display: flex by final spec ' + 'instead of display: box', {\n          node: decl\n        });\n        return undefined;\n      } else if (prop === 'text-emphasis-position') {\n        if (value === 'under' || value === 'over') {\n          result.warn('You should use 2 values for text-emphasis-position ' + 'For example, `under left` instead of just `under`.', {\n            node: decl\n          });\n        }\n      } else if (/^(align|justify|place)-(items|content)$/.test(prop) && insideFlex(decl)) {\n        if (value === 'start' || value === 'end') {\n          result.warn(`${value} value has mixed support, consider using ` + `flex-${value} instead`, {\n            node: decl\n          });\n        }\n      } else if (prop === 'text-decoration-skip' && value === 'ink') {\n        result.warn('Replace text-decoration-skip: ink to ' + 'text-decoration-skip-ink: auto, because spec had been changed', {\n          node: decl\n        });\n      } else {\n        if (gridPrefixes && this.gridStatus(decl, result)) {\n          if (decl.value === 'subgrid') {\n            result.warn('IE does not support subgrid', {\n              node: decl\n            });\n          }\n\n          if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {\n            let fixed = prop.replace('-items', '-self');\n            result.warn(`IE does not support ${prop} on grid containers. ` + `Try using ${fixed} on child elements instead: ` + `${decl.parent.selector} > * { ${fixed}: ${decl.value} }`, {\n              node: decl\n            });\n          } else if (/^(align|justify|place)-content$/.test(prop) && insideGrid(decl)) {\n            result.warn(`IE does not support ${decl.prop} on grid containers`, {\n              node: decl\n            });\n          } else if (prop === 'display' && decl.value === 'contents') {\n            result.warn('Please do not use display: contents; ' + 'if you have grid setting enabled', {\n              node: decl\n            });\n            return undefined;\n          } else if (decl.prop === 'grid-gap') {\n            let status = this.gridStatus(decl, result);\n\n            if (status === 'autoplace' && !hasRowsAndColumns(decl) && !hasGridTemplate(decl)) {\n              result.warn('grid-gap only works if grid-template(-areas) is being ' + 'used or both rows and columns have been declared ' + 'and cells have not been manually ' + 'placed inside the explicit grid', {\n                node: decl\n              });\n            } else if ((status === true || status === 'no-autoplace') && !hasGridTemplate(decl)) {\n              result.warn('grid-gap only works if grid-template(-areas) is being used', {\n                node: decl\n              });\n            }\n          } else if (prop === 'grid-auto-columns') {\n            result.warn('grid-auto-columns is not supported by IE', {\n              node: decl\n            });\n            return undefined;\n          } else if (prop === 'grid-auto-rows') {\n            result.warn('grid-auto-rows is not supported by IE', {\n              node: decl\n            });\n            return undefined;\n          } else if (prop === 'grid-auto-flow') {\n            let hasRows = parent.some(i => i.prop === 'grid-template-rows');\n            let hasCols = parent.some(i => i.prop === 'grid-template-columns');\n\n            if (hasGridTemplate(decl)) {\n              result.warn('grid-auto-flow is not supported by IE', {\n                node: decl\n              });\n            } else if (value.includes('dense')) {\n              result.warn('grid-auto-flow: dense is not supported by IE', {\n                node: decl\n              });\n            } else if (!hasRows && !hasCols) {\n              result.warn('grid-auto-flow works only if grid-template-rows and ' + 'grid-template-columns are present in the same rule', {\n                node: decl\n              });\n            }\n\n            return undefined;\n          } else if (value.includes('auto-fit')) {\n            result.warn('auto-fit value is not supported by IE', {\n              node: decl,\n              word: 'auto-fit'\n            });\n            return undefined;\n          } else if (value.includes('auto-fill')) {\n            result.warn('auto-fill value is not supported by IE', {\n              node: decl,\n              word: 'auto-fill'\n            });\n            return undefined;\n          } else if (prop.startsWith('grid-template') && value.includes('[')) {\n            result.warn('Autoprefixer currently does not support line names. ' + 'Try using grid-template-areas instead.', {\n              node: decl,\n              word: '['\n            });\n          }\n        }\n\n        if (value.includes('radial-gradient')) {\n          if (OLD_RADIAL.test(decl.value)) {\n            result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `closest-side at 0 0` ' + 'instead of `0 0, closest-side`.', {\n              node: decl\n            });\n          } else {\n            let ast = parser(value);\n\n            for (let i of ast.nodes) {\n              if (i.type === 'function' && i.value === 'radial-gradient') {\n                for (let word of i.nodes) {\n                  if (word.type === 'word') {\n                    if (word.value === 'cover') {\n                      result.warn('Gradient has outdated direction syntax. ' + 'Replace `cover` to `farthest-corner`.', {\n                        node: decl\n                      });\n                    } else if (word.value === 'contain') {\n                      result.warn('Gradient has outdated direction syntax. ' + 'Replace `contain` to `closest-side`.', {\n                        node: decl\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n\n        if (value.includes('linear-gradient')) {\n          if (OLD_LINEAR.test(value)) {\n            result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `to left` instead of `right`.', {\n              node: decl\n            });\n          }\n        }\n      }\n\n      if (SIZES.includes(decl.prop)) {\n        if (!decl.value.includes('-fill-available')) {\n          if (decl.value.includes('fill-available')) {\n            result.warn('Replace fill-available to stretch, ' + 'because spec had been changed', {\n              node: decl\n            });\n          } else if (decl.value.includes('fill')) {\n            let ast = parser(value);\n\n            if (ast.nodes.some(i => i.type === 'word' && i.value === 'fill')) {\n              result.warn('Replace fill to stretch, because spec had been changed', {\n                node: decl\n              });\n            }\n          }\n        }\n      }\n\n      let prefixer;\n\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        // Transition\n        return this.prefixes.transition.add(decl, result);\n      } else if (decl.prop === 'align-self') {\n        // align-self flexbox or grid\n        let display = this.displayType(decl);\n\n        if (display !== 'grid' && this.prefixes.options.flexbox !== false) {\n          prefixer = this.prefixes.add['align-self'];\n\n          if (prefixer && prefixer.prefixes) {\n            prefixer.process(decl);\n          }\n        }\n\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-row-align'];\n\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result);\n          }\n        }\n      } else if (decl.prop === 'justify-self') {\n        // justify-self flexbox or grid\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-column-align'];\n\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result);\n          }\n        }\n      } else if (decl.prop === 'place-self') {\n        prefixer = this.prefixes.add['place-self'];\n\n        if (prefixer && prefixer.prefixes && this.gridStatus(decl, result) !== false) {\n          return prefixer.process(decl, result);\n        }\n      } else {\n        // Properties\n        prefixer = this.prefixes.add[decl.prop];\n\n        if (prefixer && prefixer.prefixes) {\n          return prefixer.process(decl, result);\n        }\n      }\n\n      return undefined;\n    }); // Insert grid-area prefixes. We need to be able to store the different\n    // rules as a data and hack API is not enough for this\n\n    if (this.gridStatus(css, result)) {\n      insertAreas(css, this.disabled);\n    } // Values\n\n\n    return css.walkDecls(decl => {\n      if (this.disabledValue(decl, result)) return;\n      let unprefixed = this.prefixes.unprefixed(decl.prop);\n      let list = this.prefixes.values('add', unprefixed);\n\n      if (Array.isArray(list)) {\n        for (let value of list) {\n          if (value.process) value.process(decl, result);\n        }\n      }\n\n      Value.save(this.prefixes, decl);\n    });\n  }\n  /**\n   * Remove unnecessary pefixes\n   */\n\n\n  remove(css, result) {\n    // At-rules\n    let resolution = this.prefixes.remove['@resolution'];\n    css.walkAtRules((rule, i) => {\n      if (this.prefixes.remove[`@${rule.name}`]) {\n        if (!this.disabled(rule, result)) {\n          rule.parent.removeChild(i);\n        }\n      } else if (rule.name === 'media' && rule.params.includes('-resolution') && resolution) {\n        resolution.clean(rule);\n      }\n    }); // Selectors\n\n    for (let checker of this.prefixes.remove.selectors) {\n      css.walkRules((rule, i) => {\n        if (checker.check(rule)) {\n          if (!this.disabled(rule, result)) {\n            rule.parent.removeChild(i);\n          }\n        }\n      });\n    }\n\n    return css.walkDecls((decl, i) => {\n      if (this.disabled(decl, result)) return;\n      let rule = decl.parent;\n      let unprefixed = this.prefixes.unprefixed(decl.prop); // Transition\n\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        this.prefixes.transition.remove(decl);\n      } // Properties\n\n\n      if (this.prefixes.remove[decl.prop] && this.prefixes.remove[decl.prop].remove) {\n        let notHack = this.prefixes.group(decl).down(other => {\n          return this.prefixes.normalize(other.prop) === unprefixed;\n        });\n\n        if (unprefixed === 'flex-flow') {\n          notHack = true;\n        }\n\n        if (decl.prop === '-webkit-box-orient') {\n          let hacks = {\n            'flex-direction': true,\n            'flex-flow': true\n          };\n          if (!decl.parent.some(j => hacks[j.prop])) return;\n        }\n\n        if (notHack && !this.withHackValue(decl)) {\n          if (decl.raw('before').includes('\\n')) {\n            this.reduceSpaces(decl);\n          }\n\n          rule.removeChild(i);\n          return;\n        }\n      } // Values\n\n\n      for (let checker of this.prefixes.values('remove', unprefixed)) {\n        if (!checker.check) continue;\n        if (!checker.check(decl.value)) continue;\n        unprefixed = checker.unprefixed;\n        let notHack = this.prefixes.group(decl).down(other => {\n          return other.value.includes(unprefixed);\n        });\n\n        if (notHack) {\n          rule.removeChild(i);\n          return;\n        }\n      }\n    });\n  }\n  /**\n   * Some rare old values, which is not in standard\n   */\n\n\n  withHackValue(decl) {\n    return decl.prop === '-webkit-background-clip' && decl.value === 'text';\n  }\n  /**\n   * Check for grid/flexbox options.\n   */\n\n\n  disabledValue(node, result) {\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('grid')) {\n        return true;\n      }\n    }\n\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('flex')) {\n        return true;\n      }\n    }\n\n    return this.disabled(node, result);\n  }\n  /**\n   * Check for grid/flexbox options.\n   */\n\n\n  disabledDecl(node, result) {\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\n      if (node.prop.includes('grid') || node.prop === 'justify-items') {\n        return true;\n      }\n    }\n\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n      let other = ['order', 'justify-content', 'align-items', 'align-content'];\n\n      if (node.prop.includes('flex') || other.includes(node.prop)) {\n        return true;\n      }\n    }\n\n    return this.disabled(node, result);\n  }\n  /**\n   * Check for control comment and global options\n   */\n\n\n  disabled(node, result) {\n    if (!node) return false;\n\n    if (node._autoprefixerDisabled !== undefined) {\n      return node._autoprefixerDisabled;\n    }\n\n    if (node.parent) {\n      let p = node.prev();\n\n      if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {\n        node._autoprefixerDisabled = true;\n        node._autoprefixerSelfDisabled = true;\n        return true;\n      }\n    }\n\n    let value = null;\n\n    if (node.nodes) {\n      let status;\n      node.each(i => {\n        if (i.type !== 'comment') return;\n\n        if (/(!\\s*)?autoprefixer:\\s*(off|on)/i.test(i.text)) {\n          if (typeof status !== 'undefined') {\n            result.warn('Second Autoprefixer control comment ' + 'was ignored. Autoprefixer applies control ' + 'comment to whole block, not to next rules.', {\n              node: i\n            });\n          } else {\n            status = /on/i.test(i.text);\n          }\n        }\n      });\n\n      if (status !== undefined) {\n        value = !status;\n      }\n    }\n\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentDisabled = this.disabled(node.parent, result);\n\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false;\n        } else {\n          value = isParentDisabled;\n        }\n      } else {\n        value = false;\n      }\n    }\n\n    node._autoprefixerDisabled = value;\n    return value;\n  }\n  /**\n   * Normalize spaces in cascade declaration group\n   */\n\n\n  reduceSpaces(decl) {\n    let stop = false;\n    this.prefixes.group(decl).up(() => {\n      stop = true;\n      return true;\n    });\n\n    if (stop) {\n      return;\n    }\n\n    let parts = decl.raw('before').split('\\n');\n    let prevMin = parts[parts.length - 1].length;\n    let diff = false;\n    this.prefixes.group(decl).down(other => {\n      parts = other.raw('before').split('\\n');\n      let last = parts.length - 1;\n\n      if (parts[last].length > prevMin) {\n        if (diff === false) {\n          diff = parts[last].length - prevMin;\n        }\n\n        parts[last] = parts[last].slice(0, -diff);\n        other.raws.before = parts.join('\\n');\n      }\n    });\n  }\n  /**\n   * Is it flebox or grid rule\n   */\n\n\n  displayType(decl) {\n    for (let i of decl.parent.nodes) {\n      if (i.prop !== 'display') {\n        continue;\n      }\n\n      if (i.value.includes('flex')) {\n        return 'flex';\n      }\n\n      if (i.value.includes('grid')) {\n        return 'grid';\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Set grid option via control comment\n   */\n\n\n  gridStatus(node, result) {\n    if (!node) return false;\n\n    if (node._autoprefixerGridStatus !== undefined) {\n      return node._autoprefixerGridStatus;\n    }\n\n    let value = null;\n\n    if (node.nodes) {\n      let status;\n      node.each(i => {\n        if (i.type !== 'comment') return;\n\n        if (GRID_REGEX.test(i.text)) {\n          let hasAutoplace = /:\\s*autoplace/i.test(i.text);\n          let noAutoplace = /no-autoplace/i.test(i.text);\n\n          if (typeof status !== 'undefined') {\n            result.warn('Second Autoprefixer grid control comment was ' + 'ignored. Autoprefixer applies control comments to the whole ' + 'block, not to the next rules.', {\n              node: i\n            });\n          } else if (hasAutoplace) {\n            status = 'autoplace';\n          } else if (noAutoplace) {\n            status = true;\n          } else {\n            status = /on/i.test(i.text);\n          }\n        }\n      });\n\n      if (status !== undefined) {\n        value = status;\n      }\n    }\n\n    if (node.type === 'atrule' && node.name === 'supports') {\n      let params = node.params;\n\n      if (params.includes('grid') && params.includes('auto')) {\n        value = false;\n      }\n    }\n\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentGrid = this.gridStatus(node.parent, result);\n\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false;\n        } else {\n          value = isParentGrid;\n        }\n      } else if (typeof this.prefixes.options.grid !== 'undefined') {\n        value = this.prefixes.options.grid;\n      } else if (typeof process.env.AUTOPREFIXER_GRID !== 'undefined') {\n        if (process.env.AUTOPREFIXER_GRID === 'autoplace') {\n          value = 'autoplace';\n        } else {\n          value = true;\n        }\n      } else {\n        value = false;\n      }\n    }\n\n    node._autoprefixerGridStatus = value;\n    return value;\n  }\n\n}\n\nmodule.exports = Processor;","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/node_modules/autoprefixer/lib/processor.js"],"names":["parser","require","Value","insertAreas","OLD_LINEAR","OLD_RADIAL","IGNORE_NEXT","GRID_REGEX","SIZES","hasGridTemplate","decl","parent","some","i","prop","hasRowsAndColumns","hasRows","hasColumns","Processor","constructor","prefixes","add","css","result","resolution","keyframes","viewport","supports","walkAtRules","rule","name","disabled","process","options","params","includes","undefined","walkRules","selectors","map","selector","insideGrid","nodes","node","type","displayGrid","test","value","gridTemplate","startsWith","gridGap","insideFlex","gridPrefixes","gridStatus","walkDecls","disabledDecl","warn","fixed","replace","status","hasCols","word","ast","prefixer","transition","display","displayType","flexbox","disabledValue","unprefixed","list","values","Array","isArray","save","remove","removeChild","clean","checker","check","notHack","group","down","other","normalize","hacks","j","withHackValue","raw","reduceSpaces","_autoprefixerDisabled","p","prev","text","_autoprefixerSelfDisabled","each","isParentDisabled","stop","up","parts","split","prevMin","length","diff","last","slice","raws","before","join","_autoprefixerGridStatus","hasAutoplace","noAutoplace","isParentGrid","grid","env","AUTOPREFIXER_GRID","module","exports"],"mappings":"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","sourcesContent":["let parser = require('postcss-value-parser')\n\nlet Value = require('./value')\nlet insertAreas = require('./hacks/grid-utils').insertAreas\n\nconst OLD_LINEAR = /(^|[^-])linear-gradient\\(\\s*(top|left|right|bottom)/i\nconst OLD_RADIAL = /(^|[^-])radial-gradient\\(\\s*\\d+(\\w*|%)\\s+\\d+(\\w*|%)\\s*,/i\nconst IGNORE_NEXT = /(!\\s*)?autoprefixer:\\s*ignore\\s+next/i\nconst GRID_REGEX = /(!\\s*)?autoprefixer\\s*grid:\\s*(on|off|(no-)?autoplace)/i\n\nconst SIZES = [\n  'width',\n  'height',\n  'min-width',\n  'max-width',\n  'min-height',\n  'max-height',\n  'inline-size',\n  'min-inline-size',\n  'max-inline-size',\n  'block-size',\n  'min-block-size',\n  'max-block-size'\n]\n\nfunction hasGridTemplate (decl) {\n  return decl.parent.some(\n    i => i.prop === 'grid-template' || i.prop === 'grid-template-areas'\n  )\n}\n\nfunction hasRowsAndColumns (decl) {\n  let hasRows = decl.parent.some(i => i.prop === 'grid-template-rows')\n  let hasColumns = decl.parent.some(i => i.prop === 'grid-template-columns')\n  return hasRows && hasColumns\n}\n\nclass Processor {\n  constructor (prefixes) {\n    this.prefixes = prefixes\n  }\n\n  /**\n   * Add necessary prefixes\n   */\n  add (css, result) {\n    // At-rules\n    let resolution = this.prefixes.add['@resolution']\n    let keyframes = this.prefixes.add['@keyframes']\n    let viewport = this.prefixes.add['@viewport']\n    let supports = this.prefixes.add['@supports']\n\n    css.walkAtRules(rule => {\n      if (rule.name === 'keyframes') {\n        if (!this.disabled(rule, result)) {\n          return keyframes && keyframes.process(rule)\n        }\n      } else if (rule.name === 'viewport') {\n        if (!this.disabled(rule, result)) {\n          return viewport && viewport.process(rule)\n        }\n      } else if (rule.name === 'supports') {\n        if (\n          this.prefixes.options.supports !== false &&\n          !this.disabled(rule, result)\n        ) {\n          return supports.process(rule)\n        }\n      } else if (rule.name === 'media' && rule.params.includes('-resolution')) {\n        if (!this.disabled(rule, result)) {\n          return resolution && resolution.process(rule)\n        }\n      }\n\n      return undefined\n    })\n\n    // Selectors\n    css.walkRules(rule => {\n      if (this.disabled(rule, result)) return undefined\n\n      return this.prefixes.add.selectors.map(selector => {\n        return selector.process(rule, result)\n      })\n    })\n\n    function insideGrid (decl) {\n      return decl.parent.nodes.some(node => {\n        if (node.type !== 'decl') return false\n        let displayGrid =\n          node.prop === 'display' && /(inline-)?grid/.test(node.value)\n        let gridTemplate = node.prop.startsWith('grid-template')\n        let gridGap = /^grid-([A-z]+-)?gap/.test(node.prop)\n        return displayGrid || gridTemplate || gridGap\n      })\n    }\n    function insideFlex (decl) {\n      return decl.parent.some(node => {\n        return node.prop === 'display' && /(inline-)?flex/.test(node.value)\n      })\n    }\n\n    let gridPrefixes =\n      this.gridStatus(css, result) &&\n      this.prefixes.add['grid-area'] &&\n      this.prefixes.add['grid-area'].prefixes\n\n    css.walkDecls(decl => {\n      if (this.disabledDecl(decl, result)) return undefined\n\n      let parent = decl.parent\n      let prop = decl.prop\n      let value = decl.value\n\n      if (prop === 'grid-row-span') {\n        result.warn(\n          'grid-row-span is not part of final Grid Layout. Use grid-row.',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'grid-column-span') {\n        result.warn(\n          'grid-column-span is not part of final Grid Layout. Use grid-column.',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'display' && value === 'box') {\n        result.warn(\n          'You should write display: flex by final spec ' +\n            'instead of display: box',\n          { node: decl }\n        )\n        return undefined\n      } else if (prop === 'text-emphasis-position') {\n        if (value === 'under' || value === 'over') {\n          result.warn(\n            'You should use 2 values for text-emphasis-position ' +\n              'For example, `under left` instead of just `under`.',\n            { node: decl }\n          )\n        }\n      } else if (\n        /^(align|justify|place)-(items|content)$/.test(prop) &&\n        insideFlex(decl)\n      ) {\n        if (value === 'start' || value === 'end') {\n          result.warn(\n            `${value} value has mixed support, consider using ` +\n              `flex-${value} instead`,\n            { node: decl }\n          )\n        }\n      } else if (prop === 'text-decoration-skip' && value === 'ink') {\n        result.warn(\n          'Replace text-decoration-skip: ink to ' +\n            'text-decoration-skip-ink: auto, because spec had been changed',\n          { node: decl }\n        )\n      } else {\n        if (gridPrefixes && this.gridStatus(decl, result)) {\n          if (decl.value === 'subgrid') {\n            result.warn('IE does not support subgrid', { node: decl })\n          }\n          if (/^(align|justify|place)-items$/.test(prop) && insideGrid(decl)) {\n            let fixed = prop.replace('-items', '-self')\n            result.warn(\n              `IE does not support ${prop} on grid containers. ` +\n                `Try using ${fixed} on child elements instead: ` +\n                `${decl.parent.selector} > * { ${fixed}: ${decl.value} }`,\n              { node: decl }\n            )\n          } else if (\n            /^(align|justify|place)-content$/.test(prop) &&\n            insideGrid(decl)\n          ) {\n            result.warn(`IE does not support ${decl.prop} on grid containers`, {\n              node: decl\n            })\n          } else if (prop === 'display' && decl.value === 'contents') {\n            result.warn(\n              'Please do not use display: contents; ' +\n                'if you have grid setting enabled',\n              { node: decl }\n            )\n            return undefined\n          } else if (decl.prop === 'grid-gap') {\n            let status = this.gridStatus(decl, result)\n            if (\n              status === 'autoplace' &&\n              !hasRowsAndColumns(decl) &&\n              !hasGridTemplate(decl)\n            ) {\n              result.warn(\n                'grid-gap only works if grid-template(-areas) is being ' +\n                  'used or both rows and columns have been declared ' +\n                  'and cells have not been manually ' +\n                  'placed inside the explicit grid',\n                { node: decl }\n              )\n            } else if (\n              (status === true || status === 'no-autoplace') &&\n              !hasGridTemplate(decl)\n            ) {\n              result.warn(\n                'grid-gap only works if grid-template(-areas) is being used',\n                { node: decl }\n              )\n            }\n          } else if (prop === 'grid-auto-columns') {\n            result.warn('grid-auto-columns is not supported by IE', {\n              node: decl\n            })\n            return undefined\n          } else if (prop === 'grid-auto-rows') {\n            result.warn('grid-auto-rows is not supported by IE', { node: decl })\n            return undefined\n          } else if (prop === 'grid-auto-flow') {\n            let hasRows = parent.some(i => i.prop === 'grid-template-rows')\n            let hasCols = parent.some(i => i.prop === 'grid-template-columns')\n\n            if (hasGridTemplate(decl)) {\n              result.warn('grid-auto-flow is not supported by IE', {\n                node: decl\n              })\n            } else if (value.includes('dense')) {\n              result.warn('grid-auto-flow: dense is not supported by IE', {\n                node: decl\n              })\n            } else if (!hasRows && !hasCols) {\n              result.warn(\n                'grid-auto-flow works only if grid-template-rows and ' +\n                  'grid-template-columns are present in the same rule',\n                { node: decl }\n              )\n            }\n            return undefined\n          } else if (value.includes('auto-fit')) {\n            result.warn('auto-fit value is not supported by IE', {\n              node: decl,\n              word: 'auto-fit'\n            })\n            return undefined\n          } else if (value.includes('auto-fill')) {\n            result.warn('auto-fill value is not supported by IE', {\n              node: decl,\n              word: 'auto-fill'\n            })\n            return undefined\n          } else if (prop.startsWith('grid-template') && value.includes('[')) {\n            result.warn(\n              'Autoprefixer currently does not support line names. ' +\n                'Try using grid-template-areas instead.',\n              { node: decl, word: '[' }\n            )\n          }\n        }\n        if (value.includes('radial-gradient')) {\n          if (OLD_RADIAL.test(decl.value)) {\n            result.warn(\n              'Gradient has outdated direction syntax. ' +\n                'New syntax is like `closest-side at 0 0` ' +\n                'instead of `0 0, closest-side`.',\n              { node: decl }\n            )\n          } else {\n            let ast = parser(value)\n\n            for (let i of ast.nodes) {\n              if (i.type === 'function' && i.value === 'radial-gradient') {\n                for (let word of i.nodes) {\n                  if (word.type === 'word') {\n                    if (word.value === 'cover') {\n                      result.warn(\n                        'Gradient has outdated direction syntax. ' +\n                          'Replace `cover` to `farthest-corner`.',\n                        { node: decl }\n                      )\n                    } else if (word.value === 'contain') {\n                      result.warn(\n                        'Gradient has outdated direction syntax. ' +\n                          'Replace `contain` to `closest-side`.',\n                        { node: decl }\n                      )\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        if (value.includes('linear-gradient')) {\n          if (OLD_LINEAR.test(value)) {\n            result.warn(\n              'Gradient has outdated direction syntax. ' +\n                'New syntax is like `to left` instead of `right`.',\n              { node: decl }\n            )\n          }\n        }\n      }\n\n      if (SIZES.includes(decl.prop)) {\n        if (!decl.value.includes('-fill-available')) {\n          if (decl.value.includes('fill-available')) {\n            result.warn(\n              'Replace fill-available to stretch, ' +\n                'because spec had been changed',\n              { node: decl }\n            )\n          } else if (decl.value.includes('fill')) {\n            let ast = parser(value)\n            if (ast.nodes.some(i => i.type === 'word' && i.value === 'fill')) {\n              result.warn(\n                'Replace fill to stretch, because spec had been changed',\n                { node: decl }\n              )\n            }\n          }\n        }\n      }\n\n      let prefixer\n\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        // Transition\n        return this.prefixes.transition.add(decl, result)\n      } else if (decl.prop === 'align-self') {\n        // align-self flexbox or grid\n        let display = this.displayType(decl)\n        if (display !== 'grid' && this.prefixes.options.flexbox !== false) {\n          prefixer = this.prefixes.add['align-self']\n          if (prefixer && prefixer.prefixes) {\n            prefixer.process(decl)\n          }\n        }\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-row-align']\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result)\n          }\n        }\n      } else if (decl.prop === 'justify-self') {\n        // justify-self flexbox or grid\n        if (this.gridStatus(decl, result) !== false) {\n          prefixer = this.prefixes.add['grid-column-align']\n          if (prefixer && prefixer.prefixes) {\n            return prefixer.process(decl, result)\n          }\n        }\n      } else if (decl.prop === 'place-self') {\n        prefixer = this.prefixes.add['place-self']\n        if (\n          prefixer &&\n          prefixer.prefixes &&\n          this.gridStatus(decl, result) !== false\n        ) {\n          return prefixer.process(decl, result)\n        }\n      } else {\n        // Properties\n        prefixer = this.prefixes.add[decl.prop]\n        if (prefixer && prefixer.prefixes) {\n          return prefixer.process(decl, result)\n        }\n      }\n\n      return undefined\n    })\n\n    // Insert grid-area prefixes. We need to be able to store the different\n    // rules as a data and hack API is not enough for this\n    if (this.gridStatus(css, result)) {\n      insertAreas(css, this.disabled)\n    }\n\n    // Values\n    return css.walkDecls(decl => {\n      if (this.disabledValue(decl, result)) return\n\n      let unprefixed = this.prefixes.unprefixed(decl.prop)\n      let list = this.prefixes.values('add', unprefixed)\n      if (Array.isArray(list)) {\n        for (let value of list) {\n          if (value.process) value.process(decl, result)\n        }\n      }\n      Value.save(this.prefixes, decl)\n    })\n  }\n\n  /**\n   * Remove unnecessary pefixes\n   */\n  remove (css, result) {\n    // At-rules\n    let resolution = this.prefixes.remove['@resolution']\n\n    css.walkAtRules((rule, i) => {\n      if (this.prefixes.remove[`@${rule.name}`]) {\n        if (!this.disabled(rule, result)) {\n          rule.parent.removeChild(i)\n        }\n      } else if (\n        rule.name === 'media' &&\n        rule.params.includes('-resolution') &&\n        resolution\n      ) {\n        resolution.clean(rule)\n      }\n    })\n\n    // Selectors\n    for (let checker of this.prefixes.remove.selectors) {\n      css.walkRules((rule, i) => {\n        if (checker.check(rule)) {\n          if (!this.disabled(rule, result)) {\n            rule.parent.removeChild(i)\n          }\n        }\n      })\n    }\n\n    return css.walkDecls((decl, i) => {\n      if (this.disabled(decl, result)) return\n\n      let rule = decl.parent\n      let unprefixed = this.prefixes.unprefixed(decl.prop)\n\n      // Transition\n      if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n        this.prefixes.transition.remove(decl)\n      }\n\n      // Properties\n      if (\n        this.prefixes.remove[decl.prop] &&\n        this.prefixes.remove[decl.prop].remove\n      ) {\n        let notHack = this.prefixes.group(decl).down(other => {\n          return this.prefixes.normalize(other.prop) === unprefixed\n        })\n\n        if (unprefixed === 'flex-flow') {\n          notHack = true\n        }\n\n        if (decl.prop === '-webkit-box-orient') {\n          let hacks = { 'flex-direction': true, 'flex-flow': true }\n          if (!decl.parent.some(j => hacks[j.prop])) return\n        }\n\n        if (notHack && !this.withHackValue(decl)) {\n          if (decl.raw('before').includes('\\n')) {\n            this.reduceSpaces(decl)\n          }\n          rule.removeChild(i)\n          return\n        }\n      }\n\n      // Values\n      for (let checker of this.prefixes.values('remove', unprefixed)) {\n        if (!checker.check) continue\n        if (!checker.check(decl.value)) continue\n\n        unprefixed = checker.unprefixed\n        let notHack = this.prefixes.group(decl).down(other => {\n          return other.value.includes(unprefixed)\n        })\n\n        if (notHack) {\n          rule.removeChild(i)\n          return\n        }\n      }\n    })\n  }\n\n  /**\n   * Some rare old values, which is not in standard\n   */\n  withHackValue (decl) {\n    return decl.prop === '-webkit-background-clip' && decl.value === 'text'\n  }\n\n  /**\n   * Check for grid/flexbox options.\n   */\n  disabledValue (node, result) {\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('grid')) {\n        return true\n      }\n    }\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n      if (node.prop === 'display' && node.value.includes('flex')) {\n        return true\n      }\n    }\n\n    return this.disabled(node, result)\n  }\n\n  /**\n   * Check for grid/flexbox options.\n   */\n  disabledDecl (node, result) {\n    if (this.gridStatus(node, result) === false && node.type === 'decl') {\n      if (node.prop.includes('grid') || node.prop === 'justify-items') {\n        return true\n      }\n    }\n    if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n      let other = ['order', 'justify-content', 'align-items', 'align-content']\n      if (node.prop.includes('flex') || other.includes(node.prop)) {\n        return true\n      }\n    }\n\n    return this.disabled(node, result)\n  }\n\n  /**\n   * Check for control comment and global options\n   */\n  disabled (node, result) {\n    if (!node) return false\n\n    if (node._autoprefixerDisabled !== undefined) {\n      return node._autoprefixerDisabled\n    }\n\n    if (node.parent) {\n      let p = node.prev()\n      if (p && p.type === 'comment' && IGNORE_NEXT.test(p.text)) {\n        node._autoprefixerDisabled = true\n        node._autoprefixerSelfDisabled = true\n        return true\n      }\n    }\n\n    let value = null\n    if (node.nodes) {\n      let status\n      node.each(i => {\n        if (i.type !== 'comment') return\n        if (/(!\\s*)?autoprefixer:\\s*(off|on)/i.test(i.text)) {\n          if (typeof status !== 'undefined') {\n            result.warn(\n              'Second Autoprefixer control comment ' +\n                'was ignored. Autoprefixer applies control ' +\n                'comment to whole block, not to next rules.',\n              { node: i }\n            )\n          } else {\n            status = /on/i.test(i.text)\n          }\n        }\n      })\n\n      if (status !== undefined) {\n        value = !status\n      }\n    }\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentDisabled = this.disabled(node.parent, result)\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false\n        } else {\n          value = isParentDisabled\n        }\n      } else {\n        value = false\n      }\n    }\n    node._autoprefixerDisabled = value\n    return value\n  }\n\n  /**\n   * Normalize spaces in cascade declaration group\n   */\n  reduceSpaces (decl) {\n    let stop = false\n    this.prefixes.group(decl).up(() => {\n      stop = true\n      return true\n    })\n    if (stop) {\n      return\n    }\n\n    let parts = decl.raw('before').split('\\n')\n    let prevMin = parts[parts.length - 1].length\n    let diff = false\n\n    this.prefixes.group(decl).down(other => {\n      parts = other.raw('before').split('\\n')\n      let last = parts.length - 1\n\n      if (parts[last].length > prevMin) {\n        if (diff === false) {\n          diff = parts[last].length - prevMin\n        }\n\n        parts[last] = parts[last].slice(0, -diff)\n        other.raws.before = parts.join('\\n')\n      }\n    })\n  }\n\n  /**\n   * Is it flebox or grid rule\n   */\n  displayType (decl) {\n    for (let i of decl.parent.nodes) {\n      if (i.prop !== 'display') {\n        continue\n      }\n\n      if (i.value.includes('flex')) {\n        return 'flex'\n      }\n\n      if (i.value.includes('grid')) {\n        return 'grid'\n      }\n    }\n\n    return false\n  }\n\n  /**\n   * Set grid option via control comment\n   */\n  gridStatus (node, result) {\n    if (!node) return false\n\n    if (node._autoprefixerGridStatus !== undefined) {\n      return node._autoprefixerGridStatus\n    }\n\n    let value = null\n    if (node.nodes) {\n      let status\n      node.each(i => {\n        if (i.type !== 'comment') return\n        if (GRID_REGEX.test(i.text)) {\n          let hasAutoplace = /:\\s*autoplace/i.test(i.text)\n          let noAutoplace = /no-autoplace/i.test(i.text)\n          if (typeof status !== 'undefined') {\n            result.warn(\n              'Second Autoprefixer grid control comment was ' +\n                'ignored. Autoprefixer applies control comments to the whole ' +\n                'block, not to the next rules.',\n              { node: i }\n            )\n          } else if (hasAutoplace) {\n            status = 'autoplace'\n          } else if (noAutoplace) {\n            status = true\n          } else {\n            status = /on/i.test(i.text)\n          }\n        }\n      })\n\n      if (status !== undefined) {\n        value = status\n      }\n    }\n\n    if (node.type === 'atrule' && node.name === 'supports') {\n      let params = node.params\n      if (params.includes('grid') && params.includes('auto')) {\n        value = false\n      }\n    }\n\n    if (!node.nodes || value === null) {\n      if (node.parent) {\n        let isParentGrid = this.gridStatus(node.parent, result)\n        if (node.parent._autoprefixerSelfDisabled === true) {\n          value = false\n        } else {\n          value = isParentGrid\n        }\n      } else if (typeof this.prefixes.options.grid !== 'undefined') {\n        value = this.prefixes.options.grid\n      } else if (typeof process.env.AUTOPREFIXER_GRID !== 'undefined') {\n        if (process.env.AUTOPREFIXER_GRID === 'autoplace') {\n          value = 'autoplace'\n        } else {\n          value = true\n        }\n      } else {\n        value = false\n      }\n    }\n\n    node._autoprefixerGridStatus = value\n    return value\n  }\n}\n\nmodule.exports = Processor\n"]},"metadata":{},"sourceType":"script"}