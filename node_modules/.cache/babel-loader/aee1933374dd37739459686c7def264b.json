{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nfunction RouteConfig(props) {\n  const {\n    routes,\n    authState,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: Object.values(routes).map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        render: () => {\n          return !(!authState.signIn && route.privateRoute) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(route.component, {\n              routes: route.routes,\n              ...rest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: {\n              pathname: \"/login\",\n              state: {\n                from: route.path\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this);\n        }\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RouteConfig;\n\nfunction SentryComponent(props) {\n  const {\n    routes\n  } = props;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test Top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), routes && RouteConfig(routes), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test Bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c2 = SentryComponent;\nexport const routeConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false\n  },\n  test: {\n    path: \"/test\",\n    component: SentryComponent,\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"test Sentry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 26\n        }, this)\n      }\n    }\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 22\n    }, this),\n    privateRoute: false\n  }\n};\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  },\n  routes: undefined\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  }),\n  routes: PropTypes.objectOf(PropTypes.object)\n};\nSentryComponent.defaultProps = {\n  props: {\n    routes: undefined\n  }\n};\nSentryComponent.propTypes = {\n  props: PropTypes.exact({\n    routes: PropTypes.objectOf(PropTypes.object)\n  })\n};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RouteConfig\");\n$RefreshReg$(_c2, \"SentryComponent\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","BrowserRouter","Router","Switch","Route","Redirect","PropTypes","Login","Todos","RouteConfig","props","routes","authState","rest","Object","values","map","route","path","signIn","privateRoute","pathname","state","from","SentryComponent","routeConfig","login","component","test","testSentry","home","noMatch","defaultProps","undefined","propTypes","exact","bool","objectOf","object","mapStateToProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nfunction RouteConfig(props) {\n  const { routes, authState, ...rest } = props;\n  return (\n    <Router>\n      <Switch>\n        {Object.values(routes).map((route) => (\n          <Route\n            key={route.path}\n            path={route.path}\n            render={() => {\n              return !(!authState.signIn && route.privateRoute) ? (\n                <>\n                  <route.component routes={route.routes} {...rest} />\n                </>\n              ) : (\n                <Redirect\n                  to={{\n                    pathname: \"/login\",\n                    state: { from: route.path },\n                  }}\n                />\n              );\n            }}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\nfunction SentryComponent(props) {\n  const { routes } = props;\n  return (\n    <>\n      <div>Test Top</div>\n      {routes && RouteConfig(routes)}\n      <div>Test Bottom</div>\n    </>\n  );\n}\n\nexport const routeConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false,\n  },\n  test: {\n    path: \"/test\",\n    component: SentryComponent,\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => <div>test Sentry</div>,\n      },\n    },\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true,\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => <div>No Match</div>,\n    privateRoute: false,\n  },\n};\n\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n  routes: undefined,\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n  routes: PropTypes.objectOf(PropTypes.object),\n};\nSentryComponent.defaultProps = {\n  props: {\n    routes: undefined,\n  },\n};\nSentryComponent.propTypes = {\n  props: PropTypes.exact({\n    routes: PropTypes.objectOf(PropTypes.object),\n  }),\n};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}