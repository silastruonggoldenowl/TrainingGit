{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\nconst routes = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    private: false\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    private: true\n  },\n  noMatch: {\n    path: \"*\",\n    component: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No Match\"\n    }, void 0, false),\n    private: false\n  }\n};\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  const signIn = false;\n  const {\n    path,\n    location\n  } = rest;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    location: location,\n    render: () => {\n      return signIn ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: path\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PrivateRoute;\nPrivateRoute.defaultProps = {\n  children: {}\n};\nPrivateRoute.propTypes = {\n  children: PropTypes.symbol\n};\n\nfunction RouteWithSubRoutes(route) {\n  return !route.priavte ? /*#__PURE__*/_jsxDEV(Route, {\n    path: !route.priavte ? route.path : routes.login.path,\n    render: () => /*#__PURE__*/_jsxDEV(route.component, {\n      component: route.component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Route, {\n    path: routes.login.path,\n    render: () => /*#__PURE__*/_jsxDEV(route.component, {\n      component: routes.login.component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RouteWithSubRoutes;\n\nfunction RouteConfig(props) {\n  const {\n    authState\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: Object.values(routes).map(route => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, {\n        path: route.path,\n        component: route.component,\n        priavte: route.private && authState.signIn\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = RouteConfig;\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  }\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  })\n};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"PrivateRoute\");\n$RefreshReg$(_c2, \"RouteWithSubRoutes\");\n$RefreshReg$(_c3, \"RouteConfig\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","BrowserRouter","Router","Switch","Route","Redirect","PropTypes","Login","Todos","routes","login","path","component","private","home","noMatch","PrivateRoute","children","rest","signIn","location","pathname","state","from","defaultProps","propTypes","symbol","RouteWithSubRoutes","route","priavte","RouteConfig","props","authState","Object","values","map","exact","bool","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst routes = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    private: false,\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    private: true,\n  },\n  noMatch: {\n    path: \"*\",\n    component: <>No Match</>,\n    private: false,\n  },\n};\n\nfunction PrivateRoute({ children, ...rest }) {\n  const signIn = false;\n  const { path, location } = rest;\n  return (\n    <Route\n      path={path}\n      location={location}\n      render={() => {\n        return signIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: path },\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n\nPrivateRoute.defaultProps = {\n  children: {},\n};\n\nPrivateRoute.propTypes = {\n  children: PropTypes.symbol,\n};\n\nfunction RouteWithSubRoutes(route) {\n  return !route.priavte ? (\n    <Route\n      path={!route.priavte ? route.path : routes.login.path}\n      render={() => <route.component component={route.component} />}\n    />\n  ) : (\n    <Route\n      path={routes.login.path}\n      render={() => <route.component component={routes.login.component} />}\n    />\n  );\n}\n\nfunction RouteConfig(props) {\n  const { authState } = props;\n  return (\n    <Router>\n      <Switch>\n        {Object.values(routes).map((route) => (\n          <RouteWithSubRoutes\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            priavte={route.private && authState.signIn}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n};\n\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}