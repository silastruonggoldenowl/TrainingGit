{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\nconst routes = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    private: false\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    private: true\n  },\n  noMatch: {\n    path: \"*\",\n    component: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No Match\"\n    }, void 0, false),\n    private: false\n  }\n};\n\nfunction RouteWithSubRoutes(route) {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: !route.priavte ? route.path : routes.login.path,\n    render: () => /*#__PURE__*/_jsxDEV(route.component, {\n      component: !route.priavte ? route.component : routes.login.component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RouteWithSubRoutes;\n\nfunction RouteConfig(props) {\n  const {\n    authState\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: Object.values(routes).map(route => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, {\n        path: route.path,\n        component: route.component,\n        priavte: route.private && !authState.signIn\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RouteConfig;\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  }\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  })\n};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RouteWithSubRoutes\");\n$RefreshReg$(_c2, \"RouteConfig\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","BrowserRouter","Router","Switch","Route","PropTypes","Login","Todos","routes","login","path","component","private","home","noMatch","RouteWithSubRoutes","route","priavte","RouteConfig","props","authState","Object","values","map","signIn","defaultProps","propTypes","exact","bool","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,SAA7B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,QADD;AAELC,IAAAA,SAAS,EAAEL,KAFN;AAGLM,IAAAA,OAAO,EAAE;AAHJ,GADM;AAMbC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAE,GADF;AAEJC,IAAAA,SAAS,EAAEJ,KAFP;AAGJK,IAAAA,OAAO,EAAE;AAHL,GANO;AAWbE,EAAAA,OAAO,EAAE;AACPJ,IAAAA,IAAI,EAAE,GADC;AAEPC,IAAAA,SAAS,eAAE;AAAA;AAAA,qBAFJ;AAGPC,IAAAA,OAAO,EAAE;AAHF;AAXI,CAAf;;AAkBA,SAASG,kBAAT,CAA4BC,KAA5B,EAAmC;AACjC,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAE,CAACA,KAAK,CAACC,OAAP,GAAiBD,KAAK,CAACN,IAAvB,GAA8BF,MAAM,CAACC,KAAP,CAAaC,IADnD;AAEE,IAAA,MAAM,EAAE,mBACN,QAAC,KAAD,CAAO,SAAP;AACE,MAAA,SAAS,EAAE,CAACM,KAAK,CAACC,OAAP,GAAiBD,KAAK,CAACL,SAAvB,GAAmCH,MAAM,CAACC,KAAP,CAAaE;AAD7D;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KAXQI,kB;;AAaT,SAASG,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAgBD,KAAtB;AACA,sBACE,QAAC,MAAD;AAAA,2BACE,QAAC,MAAD;AAAA,gBACGE,MAAM,CAACC,MAAP,CAAcd,MAAd,EAAsBe,GAAtB,CAA2BP,KAAD,iBACzB,QAAC,kBAAD;AAEE,QAAA,IAAI,EAAEA,KAAK,CAACN,IAFd;AAGE,QAAA,SAAS,EAAEM,KAAK,CAACL,SAHnB;AAIE,QAAA,OAAO,EAAEK,KAAK,CAACJ,OAAN,IAAiB,CAACQ,SAAS,CAACI;AAJvC,SACOR,KAAK,CAACN,IADb;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;MAhBQQ,W;AAkBTA,WAAW,CAACO,YAAZ,GAA2B;AACzBL,EAAAA,SAAS,EAAE;AACTI,IAAAA,MAAM,EAAE;AADC;AADc,CAA3B;AAMAN,WAAW,CAACQ,SAAZ,GAAwB;AACtBN,EAAAA,SAAS,EAAEf,SAAS,CAACsB,KAAV,CAAgB;AACzBH,IAAAA,MAAM,EAAEnB,SAAS,CAACuB;AADO,GAAhB;AADW,CAAxB;;AAMA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCV,EAAAA,SAAS,EAAEU,KAAK,CAACV;AADiB,CAAZ,CAAxB;;AAIA,eAAepB,OAAO,CAAC6B,eAAD,CAAP,CAAyBX,WAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst routes = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    private: false,\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    private: true,\n  },\n  noMatch: {\n    path: \"*\",\n    component: <>No Match</>,\n    private: false,\n  },\n};\n\nfunction RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={!route.priavte ? route.path : routes.login.path}\n      render={() => (\n        <route.component\n          component={!route.priavte ? route.component : routes.login.component}\n        />\n      )}\n    />\n  );\n}\n\nfunction RouteConfig(props) {\n  const { authState } = props;\n  return (\n    <Router>\n      <Switch>\n        {Object.values(routes).map((route) => (\n          <RouteWithSubRoutes\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            priavte={route.private && !authState.signIn}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n};\n\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}