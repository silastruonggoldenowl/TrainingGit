{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos, Register } from \"./pages\";\nexport const routeConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false\n  },\n  register: {\n    path: \"/register\",\n    component: Register,\n    privateRoute: false\n  },\n  test: {\n    path: \"/test\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }, this),\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"test Sentry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 26\n        }, this)\n      }\n    }\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 22\n    }, this),\n    privateRoute: false\n  }\n};\n\nfunction RouteConfig(props) {\n  const {\n    routes,\n    authState,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: Object.values(routes || routeConfig).map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        render: () => {\n          return !(!authState.signIn && route.privateRoute) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(route.component, {\n              routes: route.routes,\n              ...rest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), route.routes && RouteConfig(route)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: {\n              pathname: routeConfig.login.path,\n              state: {\n                from: route.path\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this);\n        }\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RouteConfig;\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  },\n  routes: undefined\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  }),\n  routes: PropTypes.objectOf(PropTypes.object)\n}; // RouteWithSubRoutes.defaultProps = {};\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteConfig\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","BrowserRouter","Router","Switch","Route","Redirect","PropTypes","Login","Todos","Register","routeConfig","login","path","component","privateRoute","register","test","routes","testSentry","home","noMatch","RouteConfig","props","authState","rest","Object","values","map","route","signIn","pathname","state","from","defaultProps","undefined","propTypes","exact","bool","objectOf","object","mapStateToProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos, Register } from \"./pages\";\n\nexport const routeConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false,\n  },\n  register: {\n    path: \"/register\",\n    component: Register,\n    privateRoute: false,\n  },\n  test: {\n    path: \"/test\",\n    component: () => <div>Test</div>,\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => <div>test Sentry</div>,\n      },\n    },\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true,\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => <div>No Match</div>,\n    privateRoute: false,\n  },\n};\nfunction RouteConfig(props) {\n  const { routes, authState, ...rest } = props;\n  return (\n    <Router>\n      <Switch>\n        {Object.values(routes || routeConfig).map((route) => (\n          <Route\n            key={route.path}\n            path={route.path}\n            render={() => {\n              return !(!authState.signIn && route.privateRoute) ? (\n                <>\n                  <route.component routes={route.routes} {...rest} />\n                  {route.routes && RouteConfig(route)}\n                </>\n              ) : (\n                <Redirect\n                  to={{\n                    pathname: routeConfig.login.path,\n                    state: { from: route.path },\n                  }}\n                />\n              );\n            }}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n  routes: undefined,\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n  routes: PropTypes.objectOf(PropTypes.object),\n};\n// RouteWithSubRoutes.defaultProps = {};\n// RouteWithSubRoutes.propTypes = {};\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}