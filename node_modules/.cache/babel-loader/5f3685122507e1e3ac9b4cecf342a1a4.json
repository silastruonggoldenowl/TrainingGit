{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/pages/Todos.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { uuid } from \"uuidv4\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport { addStask, getStask, deleteStask, tick, tickAll, deleteAllStask } from \"../store/actions/staskActions\";\nimport { signOutAction } from \"../store/actions/authActions\";\n\nclass App extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.header = (...props) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-3\",\n      children: props[0].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }, this);\n\n    this.onEnterPress = e => {\n      const {\n        addStaskHandler\n      } = this.props;\n\n      if (e.charCode === 13 && e.target.value) {\n        const data = {\n          id: uuid(),\n          name: e.target.value,\n          isTick: false\n        };\n        addStaskHandler(data);\n        e.target.value = \"\";\n      }\n    };\n\n    this.todoTable = (...props) => {\n      const [dataProps] = props;\n      const {\n        modeShowComplete,\n        modeShowNotComplete\n      } = this.state;\n      const {\n        tickAllHandler,\n        deleteAllStaskHandler\n      } = this.props;\n      let dataMode;\n\n      if (modeShowComplete) {\n        dataMode = Object.values(dataProps.data).filter(item => item.isTick === true);\n      } else if (modeShowNotComplete) {\n        dataMode = Object.values(dataProps.data).filter(item => item.isTick === false);\n      }\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          defaultValue: \"\",\n          onKeyPress: this.onEnterPress,\n          className: \"border border-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"staskList\",\n          children: [!dataMode ? Object.values(dataProps.data).map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: this.showStask(item.id, item.isTick, item.name)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this);\n          }) : dataMode.map(item => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              children: this.showStask(item.id, item.isTick, item.name)\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => tickAllHandler(),\n              \"aria-hidden\": \"true\",\n              children: \"Select All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => deleteAllStaskHandler(),\n              \"aria-hidden\": \"true\",\n              children: \"Delete All complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                this.setState({\n                  modeShowComplete: false,\n                  modeShowNotComplete: false\n                });\n              },\n              \"aria-hidden\": \"true\",\n              children: \"Show all stask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: () => {\n                  this.setState({\n                    modeShowComplete: true,\n                    modeShowNotComplete: false\n                  });\n                },\n                \"aria-hidden\": \"true\",\n                children: \"Show stask complete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                this.setState({\n                  modeShowComplete: false,\n                  modeShowNotComplete: true\n                });\n              },\n              \"aria-hidden\": \"true\",\n              children: \"Show stask not complete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.showStask = (id, isChecked, name) => {\n      const {\n        tickCompleteHandler,\n        deleteStaskHandler\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: isChecked,\n            onChange: () => tickCompleteHandler(id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classnames({\n              \"line-through\": isChecked\n            }),\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\",\n            onClick: () => deleteStaskHandler(id),\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    };\n\n    this.state = {\n      modeShowComplete: false,\n      modeShowNotComplete: false\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    const {\n      getStaskHandler\n    } = this.props;\n    getStaskHandler();\n  }\n\n  render() {\n    const {\n      staskState,\n      logOut\n    } = this.props; // console.log(Object.keys(staskState.data));\n    // if (!staskState?.data) {\n    //   return <Loading/>\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: [/*#__PURE__*/_jsxDEV(this.header, {\n        name: \"Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(this.todoTable, {\n        data: staskState.data || []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: logOut,\n        \"aria-hidden\": \"true\",\n        children: \"Log Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  staskState: state.staskState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getStaskHandler: () => {\n    dispatch(getStask());\n  },\n  addStaskHandler: data => {\n    dispatch(addStask(data));\n  },\n  deleteStaskHandler: data => {\n    dispatch(deleteStask(data));\n  },\n  tickCompleteHandler: data => {\n    dispatch(tick(data));\n  },\n  tickAllHandler: () => {\n    dispatch(tickAll());\n  },\n  deleteAllStaskHandler: () => {\n    dispatch(deleteAllStask());\n  },\n  logOut: () => {\n    dispatch(logOutAction());\n  }\n});\n\nApp.defaultProps = {\n  staskState: {},\n  logOut: undefined,\n  getStaskHandler: undefined,\n  deleteAllStaskHandler: undefined,\n  tickAllHandler: undefined,\n  deleteStaskHandler: undefined,\n  tickCompleteHandler: undefined,\n  addStaskHandler: undefined\n};\nApp.propTypes = {\n  staskState: PropTypes.objectOf(PropTypes.object),\n  logOut: PropTypes.func,\n  getStaskHandler: PropTypes.func,\n  deleteAllStaskHandler: PropTypes.func,\n  tickAllHandler: PropTypes.func,\n  deleteStaskHandler: PropTypes.func,\n  tickCompleteHandler: PropTypes.func,\n  addStaskHandler: PropTypes.func\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/pages/Todos.jsx"],"names":["React","PropTypes","uuid","classnames","connect","addStask","getStask","deleteStask","tick","tickAll","deleteAllStask","signOutAction","App","Component","constructor","props","header","name","onEnterPress","e","addStaskHandler","charCode","target","value","data","id","isTick","todoTable","dataProps","modeShowComplete","modeShowNotComplete","state","tickAllHandler","deleteAllStaskHandler","dataMode","Object","values","filter","item","map","showStask","setState","isChecked","tickCompleteHandler","deleteStaskHandler","UNSAFE_componentWillMount","getStaskHandler","render","staskState","logOut","mapStateToProps","mapDispatchToProps","dispatch","logOutAction","defaultProps","undefined","propTypes","objectOf","object","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { uuid } from \"uuidv4\";\nimport classnames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport {\n  addStask,\n  getStask,\n  deleteStask,\n  tick,\n  tickAll,\n  deleteAllStask,\n} from \"../store/actions/staskActions\";\nimport { signOutAction } from \"../store/actions/authActions\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modeShowComplete: false,\n      modeShowNotComplete: false,\n    };\n  }\n\n  UNSAFE_componentWillMount() {\n    const { getStaskHandler } = this.props;\n    getStaskHandler();\n  }\n\n  header = (...props) => <div className=\"display-3\">{props[0].name}</div>;\n\n  onEnterPress = (e) => {\n    const { addStaskHandler } = this.props;\n    if (e.charCode === 13 && e.target.value) {\n      const data = {\n        id: uuid(),\n        name: e.target.value,\n        isTick: false,\n      };\n      addStaskHandler(data);\n      e.target.value = \"\";\n    }\n  };\n\n  todoTable = (...props) => {\n    const [dataProps] = props;\n    const { modeShowComplete, modeShowNotComplete } = this.state;\n    const { tickAllHandler, deleteAllStaskHandler } = this.props;\n    let dataMode;\n    if (modeShowComplete) {\n      dataMode = Object.values(dataProps.data).filter(\n        (item) => item.isTick === true\n      );\n    } else if (modeShowNotComplete) {\n      dataMode = Object.values(dataProps.data).filter(\n        (item) => item.isTick === false\n      );\n    }\n    return (\n      <>\n        <input\n          type=\"text\"\n          defaultValue=\"\"\n          onKeyPress={this.onEnterPress}\n          className=\"border border-1\"\n        />\n        <div className=\"staskList\">\n          {!dataMode\n            ? Object.values(dataProps.data).map((item) => {\n                return (\n                  <div key={item.id}>\n                    {this.showStask(item.id, item.isTick, item.name)}\n                  </div>\n                );\n              })\n            : dataMode.map((item) => {\n                return (\n                  <div key={item.id}>\n                    {this.showStask(item.id, item.isTick, item.name)}\n                  </div>\n                );\n              })}\n          <div>\n            <div onClick={() => tickAllHandler()} aria-hidden=\"true\">\n              Select All\n            </div>\n            <div onClick={() => deleteAllStaskHandler()} aria-hidden=\"true\">\n              Delete All complete\n            </div>\n            <div\n              onClick={() => {\n                this.setState({\n                  modeShowComplete: false,\n                  modeShowNotComplete: false,\n                });\n              }}\n              aria-hidden=\"true\"\n            >\n              Show all stask\n            </div>\n            <div>\n              <div\n                onClick={() => {\n                  this.setState({\n                    modeShowComplete: true,\n                    modeShowNotComplete: false,\n                  });\n                }}\n                aria-hidden=\"true\"\n              >\n                Show stask complete\n              </div>\n            </div>\n            <div\n              onClick={() => {\n                this.setState({\n                  modeShowComplete: false,\n                  modeShowNotComplete: true,\n                });\n              }}\n              aria-hidden=\"true\"\n            >\n              Show stask not complete\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  showStask = (id, isChecked, name) => {\n    const { tickCompleteHandler, deleteStaskHandler } = this.props;\n    return (\n      <>\n        <div className=\"d-flex justify-content-center align-items-center\">\n          <input\n            type=\"checkbox\"\n            checked={isChecked}\n            onChange={() => tickCompleteHandler(id)}\n          />\n          <div className={classnames({ \"line-through\": isChecked })}>\n            {name}\n          </div>\n          <i\n            className=\"fas fa-times\"\n            onClick={() => deleteStaskHandler(id)}\n            aria-hidden=\"true\"\n          />\n        </div>\n      </>\n    );\n  };\n\n  render() {\n    const { staskState, logOut } = this.props;\n    // console.log(Object.keys(staskState.data));\n    // if (!staskState?.data) {\n    //   return <Loading/>\n    // }\n    return (\n      <div className=\"todo-list\">\n        <this.header name=\"Todos\" />\n        <this.todoTable data={staskState.data || []} />\n        <div onClick={logOut} aria-hidden=\"true\">\n          Log Out\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  staskState: state.staskState,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getStaskHandler: () => {\n    dispatch(getStask());\n  },\n  addStaskHandler: (data) => {\n    dispatch(addStask(data));\n  },\n  deleteStaskHandler: (data) => {\n    dispatch(deleteStask(data));\n  },\n  tickCompleteHandler: (data) => {\n    dispatch(tick(data));\n  },\n  tickAllHandler: () => {\n    dispatch(tickAll());\n  },\n  deleteAllStaskHandler: () => {\n    dispatch(deleteAllStask());\n  },\n  logOut: () => {\n    dispatch(logOutAction());\n  },\n});\n\nApp.defaultProps = {\n  staskState: {},\n  logOut: undefined,\n  getStaskHandler: undefined,\n  deleteAllStaskHandler: undefined,\n  tickAllHandler: undefined,\n  deleteStaskHandler: undefined,\n  tickCompleteHandler: undefined,\n  addStaskHandler: undefined,\n};\n\nApp.propTypes = {\n  staskState: PropTypes.objectOf(PropTypes.object),\n  logOut: PropTypes.func,\n  getStaskHandler: PropTypes.func,\n  deleteAllStaskHandler: PropTypes.func,\n  tickAllHandler: PropTypes.func,\n  deleteStaskHandler: PropTypes.func,\n  tickCompleteHandler: PropTypes.func,\n  addStaskHandler: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}