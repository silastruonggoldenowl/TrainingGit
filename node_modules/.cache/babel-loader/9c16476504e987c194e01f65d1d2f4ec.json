{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst SentryComponent = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), props && RouteConfig(props)]\n  }, void 0, true);\n};\n\n_c = SentryComponent;\nexport const routeConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false\n  },\n  test: {\n    path: \"/test\",\n    component: SentryComponent,\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"test Sentry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 26\n        }, this)\n      }\n    }\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }, this),\n    privateRoute: false\n  }\n};\n\nfunction RouteWithSubRoutes(route) {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path,\n    render: () => {\n      return !route.privateRoute ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(route.component, {\n          component: route.component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), route.routes && /*#__PURE__*/_jsxDEV(Switch, {\n          children: Object.values(route.routes).map(prop => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, {\n            path: prop.path,\n            component: prop.component,\n            privateRoute: prop.privateRoute,\n            routes: prop.routes\n          }, prop.path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: route.login.path,\n          state: {\n            from: route.path\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RouteWithSubRoutes;\n\nfunction RouteConfig(props) {\n  const {\n    routes,\n    authState,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: Object.values(routes).map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        render: () => {\n          return route.privateRoute && !authState.signIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(route.component, {\n              routes: route.routes,\n              ...rest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: {\n              pathname: route.login.path,\n              state: {\n                from: route.path\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = RouteConfig;\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  }\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  }),\n  routes: PropTypes.any\n}; // RouteWithSubRoutes.defaultProps = {};\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SentryComponent\");\n$RefreshReg$(_c2, \"RouteWithSubRoutes\");\n$RefreshReg$(_c3, \"RouteConfig\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","BrowserRouter","Router","Switch","Route","Redirect","PropTypes","Login","Todos","SentryComponent","props","RouteConfig","routeConfig","login","path","component","privateRoute","test","routes","testSentry","home","noMatch","RouteWithSubRoutes","route","Object","values","map","prop","pathname","state","from","authState","rest","signIn","defaultProps","propTypes","exact","bool","any","mapStateToProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst SentryComponent = (props) => {\n  return (\n    <>\n      <div>Test</div>\n      {props && RouteConfig(props)}\n    </>\n  );\n};\n\nexport const routeConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false,\n  },\n  test: {\n    path: \"/test\",\n    component: SentryComponent,\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => <div>test Sentry</div>,\n      },\n    },\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true,\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => <div>No Match</div>,\n    privateRoute: false,\n  },\n};\nfunction RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={() => {\n        return !route.privateRoute ? (\n          <>\n            <route.component component={route.component} />\n            {route.routes && (\n              <Switch>\n                {Object.values(route.routes).map((prop) => (\n                  <RouteWithSubRoutes\n                    key={prop.path}\n                    path={prop.path}\n                    component={prop.component}\n                    privateRoute={prop.privateRoute}\n                    routes={prop.routes}\n                  />\n                ))}\n              </Switch>\n            )}\n          </>\n        ) : (\n          <Redirect\n            to={{\n              pathname: route.login.path,\n              state: { from: route.path },\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\nfunction RouteConfig(props) {\n  const { routes, authState, ...rest } = props;\n  return (\n    <Router>\n      <Switch>\n        {Object.values(routes).map((route) => (\n          <Route\n            path={route.path}\n            render={() => {\n              return route.privateRoute && !authState.signIn ? (\n                <>\n                  <route.component routes={route.routes} {...rest} />\n                </>\n              ) : (\n                <Redirect\n                  to={{\n                    pathname: route.login.path,\n                    state: { from: route.path },\n                  }}\n                />\n              );\n            }}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n  routes: PropTypes.any,\n};\n// RouteWithSubRoutes.defaultProps = {};\n// RouteWithSubRoutes.propTypes = {};\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}