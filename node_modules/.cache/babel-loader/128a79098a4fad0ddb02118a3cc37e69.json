{"ast":null,"code":"let flexSpec = require('./flex-spec');\n\nlet Declaration = require('../declaration');\n\nclass AlignContent extends Declaration {\n  /**\n   * Change property name for 2012 spec\n   */\n  prefixed(prop, prefix) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n\n    if (spec === 2012) {\n      return prefix + 'flex-line-pack';\n    }\n\n    return super.prefixed(prop, prefix);\n  }\n  /**\n   * Return property name by final spec\n   */\n\n\n  normalize() {\n    return 'align-content';\n  }\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n\n\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0];\n\n    if (spec === 2012) {\n      decl.value = AlignContent.oldValues[decl.value] || decl.value;\n      return super.set(decl, prefix);\n    }\n\n    if (spec === 'final') {\n      return super.set(decl, prefix);\n    }\n\n    return undefined;\n  }\n\n}\n\nAlignContent.names = ['align-content', 'flex-line-pack'];\nAlignContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-between': 'justify',\n  'space-around': 'distribute'\n};\nmodule.exports = AlignContent;","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/node_modules/autoprefixer/lib/hacks/align-content.js"],"names":["flexSpec","require","Declaration","AlignContent","prefixed","prop","prefix","spec","normalize","set","decl","value","oldValues","undefined","names","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAME,YAAN,SAA2BD,WAA3B,CAAuC;AACrC;AACF;AACA;AACEE,EAAAA,QAAQ,CAAEC,IAAF,EAAQC,MAAR,EAAgB;AACtB,QAAIC,IAAJ;AACC,KAACA,IAAD,EAAOD,MAAP,IAAiBN,QAAQ,CAACM,MAAD,CAAzB;;AACD,QAAIC,IAAI,KAAK,IAAb,EAAmB;AACjB,aAAOD,MAAM,GAAG,gBAAhB;AACD;;AACD,WAAO,MAAMF,QAAN,CAAeC,IAAf,EAAqBC,MAArB,CAAP;AACD;AAED;AACF;AACA;;;AACEE,EAAAA,SAAS,GAAI;AACX,WAAO,eAAP;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,GAAG,CAAEC,IAAF,EAAQJ,MAAR,EAAgB;AACjB,QAAIC,IAAI,GAAGP,QAAQ,CAACM,MAAD,CAAR,CAAiB,CAAjB,CAAX;;AACA,QAAIC,IAAI,KAAK,IAAb,EAAmB;AACjBG,MAAAA,IAAI,CAACC,KAAL,GAAaR,YAAY,CAACS,SAAb,CAAuBF,IAAI,CAACC,KAA5B,KAAsCD,IAAI,CAACC,KAAxD;AACA,aAAO,MAAMF,GAAN,CAAUC,IAAV,EAAgBJ,MAAhB,CAAP;AACD;;AACD,QAAIC,IAAI,KAAK,OAAb,EAAsB;AACpB,aAAO,MAAME,GAAN,CAAUC,IAAV,EAAgBJ,MAAhB,CAAP;AACD;;AACD,WAAOO,SAAP;AACD;;AAjCoC;;AAoCvCV,YAAY,CAACW,KAAb,GAAqB,CAAC,eAAD,EAAkB,gBAAlB,CAArB;AAEAX,YAAY,CAACS,SAAb,GAAyB;AACvB,cAAY,KADW;AAEvB,gBAAc,OAFS;AAGvB,mBAAiB,SAHM;AAIvB,kBAAgB;AAJO,CAAzB;AAOAG,MAAM,CAACC,OAAP,GAAiBb,YAAjB","sourcesContent":["let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass AlignContent extends Declaration {\n  /**\n   * Change property name for 2012 spec\n   */\n  prefixed (prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2012) {\n      return prefix + 'flex-line-pack'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize () {\n    return 'align-content'\n  }\n\n  /**\n   * Change value for 2012 spec and ignore prefix for 2009\n   */\n  set (decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2012) {\n      decl.value = AlignContent.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 'final') {\n      return super.set(decl, prefix)\n    }\n    return undefined\n  }\n}\n\nAlignContent.names = ['align-content', 'flex-line-pack']\n\nAlignContent.oldValues = {\n  'flex-end': 'end',\n  'flex-start': 'start',\n  'space-between': 'justify',\n  'space-around': 'distribute'\n}\n\nmodule.exports = AlignContent\n"]},"metadata":{},"sourceType":"script"}