{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/pages/Login.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { Formik } from \"formik\";\nimport firebaseConfig from \"../firebaseConfig\";\nimport { signInAction, signInWithFbAction } from \"../Store/actions/authActions\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n\n    this.onSubmitForm = values => {\n      const {\n        logInHandler\n      } = this.props;\n      const {\n        email,\n        password\n      } = values;\n      firebaseConfig.firebase.auth().signInWithEmailAndPassword(email, password).then(result => {\n        logInHandler({\n          email: result.user.email\n        });\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.formView = props => {\n      const {\n        // isSubmitting,\n        errors,\n        handleSubmit,\n        handleChange,\n        touched,\n        handleBlur\n      } = props; // const a = {};\n      // console.log(a.b.c);\n\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"display-4 font-weight-bold mb-3\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border border-1 p-2 my-1 w-100 form-control\",\n            placeholder: \"Username\",\n            name: \"email\",\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.email && touched.email && errors.email || \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border border-1 p-2 my-1 w-100 form-control\",\n            placeholder: \"Password\",\n            name: \"password\",\n            type: \"Password\",\n            onChange: handleChange,\n            onBlur: handleBlur\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors.password && touched.password && errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\" // disabled={isSubmitting}\n            ,\n            className: \"btn btn-primary my-1 w-100\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: this.onClickSignInWithFB,\n            \"aria-hidden\": \"true\",\n            className: \"btn btn-success my-1 w-100\",\n            children: \"Sign in with FB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.onClickSignInWithFB = () => {\n      firebaseConfig.firebase.auth().signInWithPopup(firebaseConfig.FBProvider).then(this.handlerLoginWithFB).catch(e => alert(e));\n    };\n\n    this.handlerLoginWithFB = async result => {\n      const {\n        signInWithFB\n      } = this.props;\n      signInWithFB(result.user.email);\n    };\n\n    this.onClickSignInWithEmail = () => {\n      firebaseConfig.firebase.auth().createUserWithEmailAndPassword(\"example@gmail.com\", \"123456789\");\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const {\n      authState,\n      location\n    } = this.props;\n\n    if (authState.signIn) {\n      var _location$state;\n\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) || \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 14\n      }, this);\n    } // console.log(authState);\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list text-center\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        className: \"w-100\",\n        initialValues: {\n          email: \"\",\n          password: \"\"\n        },\n        validate: values => {\n          const errors = {};\n\n          if (!values.email) {\n            errors.email = \"Required\";\n          } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n            errors.email = \"Invalid email address\";\n          }\n\n          if (!values.password) {\n            errors.password = \"Required\";\n          }\n\n          return errors;\n        },\n        onSubmit: this.onSubmitForm,\n        children: this.formView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  logInHandler: data => {\n    dispatch(signInAction(data));\n  },\n  signInWithFB: data => {\n    dispatch(signInWithFbAction(data));\n  }\n});\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nLogin.defaultProps = {\n  logInHandler: undefined,\n  signInWithFB: undefined,\n  authState: {},\n  location: {}\n};\nLogin.propTypes = {\n  signInWithFB: PropTypes.func,\n  authState: PropTypes.objectOf(PropTypes.object),\n  location: PropTypes.objectOf(PropTypes.object),\n  logInHandler: PropTypes.func\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/pages/Login.jsx"],"names":["React","connect","PropTypes","Redirect","withRouter","Formik","firebaseConfig","signInAction","signInWithFbAction","Login","Component","constructor","onSubmitForm","values","logInHandler","props","email","password","firebase","auth","signInWithEmailAndPassword","then","result","user","catch","e","console","log","formView","errors","handleSubmit","handleChange","touched","handleBlur","onClickSignInWithFB","signInWithPopup","FBProvider","handlerLoginWithFB","alert","signInWithFB","onClickSignInWithEmail","createUserWithEmailAndPassword","state","render","authState","location","signIn","from","test","mapDispatchToProps","dispatch","data","mapStateToProps","defaultProps","undefined","propTypes","func","objectOf","object"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport { Formik } from \"formik\";\nimport firebaseConfig from \"../firebaseConfig\";\nimport { signInAction, signInWithFbAction } from \"../Store/actions/authActions\";\n\nclass Login extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  onSubmitForm = (values) => {\n    const { logInHandler } = this.props;\n    const { email, password } = values;\n    firebaseConfig.firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        logInHandler({ email: result.user.email });\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  formView = (props) => {\n    const {\n      // isSubmitting,\n      errors,\n      handleSubmit,\n      handleChange,\n      touched,\n      handleBlur,\n    } = props;\n    // const a = {};\n    // console.log(a.b.c);\n    return (\n      <form onSubmit={handleSubmit}>\n        <div className=\"\">\n          <h2 className=\"display-4 font-weight-bold mb-3\">Sign In</h2>\n          <input\n            className=\"border border-1 p-2 my-1 w-100 form-control\"\n            placeholder=\"Username\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <div>{(errors.email && touched.email && errors.email) || \" \"}</div>\n          <input\n            className=\"border border-1 p-2 my-1 w-100 form-control\"\n            placeholder=\"Password\"\n            name=\"password\"\n            type=\"Password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n          />\n          <div>{errors.password && touched.password && errors.password}</div>\n          <button\n            type=\"submit\"\n            // disabled={isSubmitting}\n            className=\"btn btn-primary my-1 w-100\"\n          >\n            Sign In\n          </button>\n\n          <div\n            onClick={this.onClickSignInWithFB}\n            aria-hidden=\"true\"\n            className=\"btn btn-success my-1 w-100\"\n          >\n            Sign in with FB\n          </div>\n        </div>\n      </form>\n    );\n  };\n\n  onClickSignInWithFB = () => {\n    firebaseConfig.firebase\n      .auth()\n      .signInWithPopup(firebaseConfig.FBProvider)\n      .then(this.handlerLoginWithFB)\n      .catch((e) => alert(e));\n  };\n\n  handlerLoginWithFB = async (result) => {\n    const { signInWithFB } = this.props;\n    signInWithFB(result.user.email);\n  };\n\n  onClickSignInWithEmail = () => {\n    firebaseConfig.firebase\n      .auth()\n      .createUserWithEmailAndPassword(\"example@gmail.com\", \"123456789\");\n  };\n\n  render() {\n    const { authState, location } = this.props;\n    if (authState.signIn) {\n      return <Redirect to={location?.state?.from || \"/\"} />;\n    }\n    // console.log(authState);\n    return (\n      <div className=\"todo-list text-center\">\n        <Formik\n          className=\"w-100\"\n          initialValues={{ email: \"\", password: \"\" }}\n          validate={(values) => {\n            const errors = {};\n            if (!values.email) {\n              errors.email = \"Required\";\n            } else if (\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n            ) {\n              errors.email = \"Invalid email address\";\n            }\n            if (!values.password) {\n              errors.password = \"Required\";\n            }\n            return errors;\n          }}\n          onSubmit={this.onSubmitForm}\n        >\n          {this.formView}\n        </Formik>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  logInHandler: (data) => {\n    dispatch(signInAction(data));\n  },\n  signInWithFB: (data) => {\n    dispatch(signInWithFbAction(data));\n  },\n});\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\n\nLogin.defaultProps = {\n  logInHandler: undefined,\n  signInWithFB: undefined,\n  authState: {},\n  location: {},\n};\n\nLogin.propTypes = {\n  signInWithFB: PropTypes.func,\n  authState: PropTypes.objectOf(PropTypes.object),\n  location: PropTypes.objectOf(PropTypes.object),\n  logInHandler: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Login));\n"]},"metadata":{},"sourceType":"module"}