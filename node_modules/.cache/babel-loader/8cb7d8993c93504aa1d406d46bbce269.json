{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\nconst routesConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false\n  },\n  test: {\n    path: \"/test\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 22\n    }, this),\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => {\n          const a = {};\n          console.log(a.b.c);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"test Sentry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 18\n          }, this);\n        }\n      }\n    }\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }, this),\n    privateRoute: false\n  }\n};\n\nfunction RouteConfig(props) {\n  const {\n    authState,\n    routes\n  } = props;\n  const route = routes || routesConfig;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path,\n    render: () => {\n      return !(route.privateRoute && !authState.signIn) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(route.component, {\n          component: route.component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), route.routes && /*#__PURE__*/_jsxDEV(Switch, {\n          children: Object.values(route.routes).map(prop => /*#__PURE__*/_jsxDEV(RouteConfig, {\n            path: prop.path,\n            component: prop.component,\n            privateRoute: prop.privateRoute,\n            routes: prop.routes\n          }, prop.path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: routesConfig.login.path,\n          state: {\n            from: route.path\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RouteConfig;\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  },\n  routes: undefined\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  }),\n  routes: PropTypes.objectOf(PropTypes.objectOf)\n}; // RouteWithSubRoutes.defaultProps = {};\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteConfig\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","Switch","Route","Redirect","PropTypes","Login","Todos","routesConfig","login","path","component","privateRoute","test","routes","testSentry","a","console","log","b","c","home","noMatch","RouteConfig","props","authState","route","signIn","Object","values","map","prop","pathname","state","from","defaultProps","undefined","propTypes","exact","bool","objectOf","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst routesConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false,\n  },\n  test: {\n    path: \"/test\",\n    component: () => <div>Test</div>,\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => {\n          const a = {};\n          console.log(a.b.c);\n          return <div>test Sentry</div>;\n        },\n      },\n    },\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true,\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => <div>No Match</div>,\n    privateRoute: false,\n  },\n};\n\nfunction RouteConfig(props) {\n  const { authState, routes } = props;\n  const route = routes || routesConfig;\n  return (\n    <Route\n      path={route.path}\n      render={() => {\n        return !(route.privateRoute && !authState.signIn) ? (\n          <>\n            <route.component component={route.component} />\n            {route.routes && (\n              <Switch>\n                {Object.values(route.routes).map((prop) => (\n                  <RouteConfig\n                    key={prop.path}\n                    path={prop.path}\n                    component={prop.component}\n                    privateRoute={prop.privateRoute}\n                    routes={prop.routes}\n                  />\n                ))}\n              </Switch>\n            )}\n          </>\n        ) : (\n          <Redirect\n            to={{\n              pathname: routesConfig.login.path,\n              state: { from: route.path },\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n  routes: undefined,\n};\n\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n  routes: PropTypes.objectOf(PropTypes.objectOf),\n};\n\n// RouteWithSubRoutes.defaultProps = {};\n\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}