{"ast":null,"code":"let OldValue = require('../old-value');\n\nlet Value = require('../value');\n\nclass Pixelated extends Value {\n  /**\n   * Use non-standard name for WebKit and Firefox\n   */\n  replace(string, prefix) {\n    if (prefix === '-webkit-') {\n      return string.replace(this.regexp(), '$1-webkit-optimize-contrast');\n    }\n\n    if (prefix === '-moz-') {\n      return string.replace(this.regexp(), '$1-moz-crisp-edges');\n    }\n\n    return super.replace(string, prefix);\n  }\n  /**\n   * Different name for WebKit and Firefox\n   */\n\n\n  old(prefix) {\n    if (prefix === '-webkit-') {\n      return new OldValue(this.name, '-webkit-optimize-contrast');\n    }\n\n    if (prefix === '-moz-') {\n      return new OldValue(this.name, '-moz-crisp-edges');\n    }\n\n    return super.old(prefix);\n  }\n\n}\n\nPixelated.names = ['pixelated'];\nmodule.exports = Pixelated;","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/node_modules/autoprefixer/lib/hacks/pixelated.js"],"names":["OldValue","require","Value","Pixelated","replace","string","prefix","regexp","old","name","names","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,cAAD,CAAtB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,UAAD,CAAnB;;AAEA,MAAME,SAAN,SAAwBD,KAAxB,CAA8B;AAC5B;AACF;AACA;AACEE,EAAAA,OAAO,CAAEC,MAAF,EAAUC,MAAV,EAAkB;AACvB,QAAIA,MAAM,KAAK,UAAf,EAA2B;AACzB,aAAOD,MAAM,CAACD,OAAP,CAAe,KAAKG,MAAL,EAAf,EAA8B,6BAA9B,CAAP;AACD;;AACD,QAAID,MAAM,KAAK,OAAf,EAAwB;AACtB,aAAOD,MAAM,CAACD,OAAP,CAAe,KAAKG,MAAL,EAAf,EAA8B,oBAA9B,CAAP;AACD;;AACD,WAAO,MAAMH,OAAN,CAAcC,MAAd,EAAsBC,MAAtB,CAAP;AACD;AAED;AACF;AACA;;;AACEE,EAAAA,GAAG,CAAEF,MAAF,EAAU;AACX,QAAIA,MAAM,KAAK,UAAf,EAA2B;AACzB,aAAO,IAAIN,QAAJ,CAAa,KAAKS,IAAlB,EAAwB,2BAAxB,CAAP;AACD;;AACD,QAAIH,MAAM,KAAK,OAAf,EAAwB;AACtB,aAAO,IAAIN,QAAJ,CAAa,KAAKS,IAAlB,EAAwB,kBAAxB,CAAP;AACD;;AACD,WAAO,MAAMD,GAAN,CAAUF,MAAV,CAAP;AACD;;AAzB2B;;AA4B9BH,SAAS,CAACO,KAAV,GAAkB,CAAC,WAAD,CAAlB;AAEAC,MAAM,CAACC,OAAP,GAAiBT,SAAjB","sourcesContent":["let OldValue = require('../old-value')\nlet Value = require('../value')\n\nclass Pixelated extends Value {\n  /**\n   * Use non-standard name for WebKit and Firefox\n   */\n  replace (string, prefix) {\n    if (prefix === '-webkit-') {\n      return string.replace(this.regexp(), '$1-webkit-optimize-contrast')\n    }\n    if (prefix === '-moz-') {\n      return string.replace(this.regexp(), '$1-moz-crisp-edges')\n    }\n    return super.replace(string, prefix)\n  }\n\n  /**\n   * Different name for WebKit and Firefox\n   */\n  old (prefix) {\n    if (prefix === '-webkit-') {\n      return new OldValue(this.name, '-webkit-optimize-contrast')\n    }\n    if (prefix === '-moz-') {\n      return new OldValue(this.name, '-moz-crisp-edges')\n    }\n    return super.old(prefix)\n  }\n}\n\nPixelated.names = ['pixelated']\n\nmodule.exports = Pixelated\n"]},"metadata":{},"sourceType":"script"}