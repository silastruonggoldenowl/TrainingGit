{"ast":null,"code":"let Declaration = require('../declaration');\n\nclass BlockLogical extends Declaration {\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  prefixed(prop, prefix) {\n    if (prop.includes('-start')) {\n      return prefix + prop.replace('-block-start', '-before');\n    }\n\n    return prefix + prop.replace('-block-end', '-after');\n  }\n  /**\n   * Return property name by spec\n   */\n\n\n  normalize(prop) {\n    if (prop.includes('-before')) {\n      return prop.replace('-before', '-block-start');\n    }\n\n    return prop.replace('-after', '-block-end');\n  }\n\n}\n\nBlockLogical.names = ['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end', 'border-before', 'border-after', 'margin-before', 'margin-after', 'padding-before', 'padding-after'];\nmodule.exports = BlockLogical;","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/node_modules/autoprefixer/lib/hacks/block-logical.js"],"names":["Declaration","require","BlockLogical","prefixed","prop","prefix","includes","replace","normalize","names","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAMC,YAAN,SAA2BF,WAA3B,CAAuC;AACrC;AACF;AACA;AACEG,EAAAA,QAAQ,CAAEC,IAAF,EAAQC,MAAR,EAAgB;AACtB,QAAID,IAAI,CAACE,QAAL,CAAc,QAAd,CAAJ,EAA6B;AAC3B,aAAOD,MAAM,GAAGD,IAAI,CAACG,OAAL,CAAa,cAAb,EAA6B,SAA7B,CAAhB;AACD;;AACD,WAAOF,MAAM,GAAGD,IAAI,CAACG,OAAL,CAAa,YAAb,EAA2B,QAA3B,CAAhB;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,SAAS,CAAEJ,IAAF,EAAQ;AACf,QAAIA,IAAI,CAACE,QAAL,CAAc,SAAd,CAAJ,EAA8B;AAC5B,aAAOF,IAAI,CAACG,OAAL,CAAa,SAAb,EAAwB,cAAxB,CAAP;AACD;;AACD,WAAOH,IAAI,CAACG,OAAL,CAAa,QAAb,EAAuB,YAAvB,CAAP;AACD;;AAnBoC;;AAsBvCL,YAAY,CAACO,KAAb,GAAqB,CACnB,oBADmB,EAEnB,kBAFmB,EAGnB,oBAHmB,EAInB,kBAJmB,EAKnB,qBALmB,EAMnB,mBANmB,EAOnB,eAPmB,EAQnB,cARmB,EASnB,eATmB,EAUnB,cAVmB,EAWnB,gBAXmB,EAYnB,eAZmB,CAArB;AAeAC,MAAM,CAACC,OAAP,GAAiBT,YAAjB","sourcesContent":["let Declaration = require('../declaration')\n\nclass BlockLogical extends Declaration {\n  /**\n   * Use old syntax for -moz- and -webkit-\n   */\n  prefixed (prop, prefix) {\n    if (prop.includes('-start')) {\n      return prefix + prop.replace('-block-start', '-before')\n    }\n    return prefix + prop.replace('-block-end', '-after')\n  }\n\n  /**\n   * Return property name by spec\n   */\n  normalize (prop) {\n    if (prop.includes('-before')) {\n      return prop.replace('-before', '-block-start')\n    }\n    return prop.replace('-after', '-block-end')\n  }\n}\n\nBlockLogical.names = [\n  'border-block-start',\n  'border-block-end',\n  'margin-block-start',\n  'margin-block-end',\n  'padding-block-start',\n  'padding-block-end',\n  'border-before',\n  'border-after',\n  'margin-before',\n  'margin-after',\n  'padding-before',\n  'padding-after'\n]\n\nmodule.exports = BlockLogical\n"]},"metadata":{},"sourceType":"script"}