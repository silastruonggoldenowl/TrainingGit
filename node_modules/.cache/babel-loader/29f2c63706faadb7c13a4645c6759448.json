{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes, { func } from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst SentryComponent = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), props && RouteConfig(props)]\n  }, void 0, true);\n};\n\n_c = SentryComponent;\nexport const routeConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false\n  },\n  test: {\n    path: \"/test\",\n    component: props => {\n      const {\n        routes\n      } = props;\n      console.log(routes);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Test top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Test bottom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    },\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"test Sentry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 26\n        }, this)\n      }\n    }\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 22\n    }, this),\n    privateRoute: false\n  }\n};\n\nfunction RouteConfig(props) {\n  const {\n    routes,\n    authState,\n    ...rest\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: Object.values(routes).map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        render: () => {\n          return !(!authState.signIn && route.privateRoute) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(route.component, {\n              routes: route.routes,\n              ...rest\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: {\n              pathname: routeConfig.login.path,\n              state: {\n                from: route.path\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this);\n        }\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RouteConfig;\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  },\n  routes: undefined\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  }),\n  routes: PropTypes.objectOf(PropTypes.object)\n}; // RouteWithSubRoutes.defaultProps = {};\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SentryComponent\");\n$RefreshReg$(_c2, \"RouteConfig\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","BrowserRouter","Router","Switch","Route","Redirect","PropTypes","func","Login","Todos","SentryComponent","props","RouteConfig","routeConfig","login","path","component","privateRoute","test","routes","console","log","testSentry","home","noMatch","authState","rest","Object","values","map","route","signIn","pathname","state","from","defaultProps","undefined","propTypes","exact","bool","objectOf","object","mapStateToProps"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PropTypes, { func } from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst SentryComponent = (props) => {\n  return (\n    <>\n      <div>Test</div>\n      {props && RouteConfig(props)}\n    </>\n  );\n};\n\nexport const routeConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false,\n  },\n  test: {\n    path: \"/test\",\n    component: (props) => {\n      const { routes } = props;\n      console.log(routes);\n      return (\n        <>\n          <div>Test top</div>\n          <div>Test bottom</div>\n        </>\n      );\n    },\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => <div>test Sentry</div>,\n      },\n    },\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true,\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => <div>No Match</div>,\n    privateRoute: false,\n  },\n};\nfunction RouteConfig(props) {\n  const { routes, authState, ...rest } = props;\n  return (\n    <Router>\n      <Switch>\n        {Object.values(routes).map((route) => (\n          <Route\n            key={route.path}\n            path={route.path}\n            render={() => {\n              return !(!authState.signIn && route.privateRoute) ? (\n                <>\n                  <route.component routes={route.routes} {...rest} />\n                </>\n              ) : (\n                <Redirect\n                  to={{\n                    pathname: routeConfig.login.path,\n                    state: { from: route.path },\n                  }}\n                />\n              );\n            }}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n  routes: undefined,\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n  routes: PropTypes.objectOf(PropTypes.object),\n};\n// RouteWithSubRoutes.defaultProps = {};\n// RouteWithSubRoutes.propTypes = {};\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}