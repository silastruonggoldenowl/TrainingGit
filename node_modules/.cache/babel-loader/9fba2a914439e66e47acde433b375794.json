{"ast":null,"code":"let Declaration = require('../declaration');\n\nclass GridStart extends Declaration {\n  /**\n   * Do not add prefix for unsupported value in IE\n   */\n  check(decl) {\n    let value = decl.value;\n    return !value.includes('/') || value.includes('span');\n  }\n  /**\n   * Return a final spec property\n   */\n\n\n  normalize(prop) {\n    return prop.replace('-start', '');\n  }\n  /**\n   * Change property name for IE\n   */\n\n\n  prefixed(prop, prefix) {\n    let result = super.prefixed(prop, prefix);\n\n    if (prefix === '-ms-') {\n      result = result.replace('-start', '');\n    }\n\n    return result;\n  }\n\n}\n\nGridStart.names = ['grid-row-start', 'grid-column-start'];\nmodule.exports = GridStart;","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/node_modules/autoprefixer/lib/hacks/grid-start.js"],"names":["Declaration","require","GridStart","check","decl","value","includes","normalize","prop","replace","prefixed","prefix","result","names","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAMC,SAAN,SAAwBF,WAAxB,CAAoC;AAClC;AACF;AACA;AACEG,EAAAA,KAAK,CAAEC,IAAF,EAAQ;AACX,QAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,WAAO,CAACA,KAAK,CAACC,QAAN,CAAe,GAAf,CAAD,IAAwBD,KAAK,CAACC,QAAN,CAAe,MAAf,CAA/B;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,SAAS,CAAEC,IAAF,EAAQ;AACf,WAAOA,IAAI,CAACC,OAAL,CAAa,QAAb,EAAuB,EAAvB,CAAP;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,QAAQ,CAAEF,IAAF,EAAQG,MAAR,EAAgB;AACtB,QAAIC,MAAM,GAAG,MAAMF,QAAN,CAAeF,IAAf,EAAqBG,MAArB,CAAb;;AACA,QAAIA,MAAM,KAAK,MAAf,EAAuB;AACrBC,MAAAA,MAAM,GAAGA,MAAM,CAACH,OAAP,CAAe,QAAf,EAAyB,EAAzB,CAAT;AACD;;AACD,WAAOG,MAAP;AACD;;AAzBiC;;AA4BpCV,SAAS,CAACW,KAAV,GAAkB,CAAC,gBAAD,EAAmB,mBAAnB,CAAlB;AAEAC,MAAM,CAACC,OAAP,GAAiBb,SAAjB","sourcesContent":["let Declaration = require('../declaration')\n\nclass GridStart extends Declaration {\n  /**\n   * Do not add prefix for unsupported value in IE\n   */\n  check (decl) {\n    let value = decl.value\n    return !value.includes('/') || value.includes('span')\n  }\n\n  /**\n   * Return a final spec property\n   */\n  normalize (prop) {\n    return prop.replace('-start', '')\n  }\n\n  /**\n   * Change property name for IE\n   */\n  prefixed (prop, prefix) {\n    let result = super.prefixed(prop, prefix)\n    if (prefix === '-ms-') {\n      result = result.replace('-start', '')\n    }\n    return result\n  }\n}\n\nGridStart.names = ['grid-row-start', 'grid-column-start']\n\nmodule.exports = GridStart\n"]},"metadata":{},"sourceType":"script"}