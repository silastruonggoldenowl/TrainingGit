{"ast":null,"code":"let Declaration = require('../declaration');\n\nclass BreakProps extends Declaration {\n  /**\n   * Change name for -webkit- and -moz- prefix\n   */\n  prefixed(prop, prefix) {\n    return `${prefix}column-${prop}`;\n  }\n  /**\n   * Return property name by final spec\n   */\n\n\n  normalize(prop) {\n    if (prop.includes('inside')) {\n      return 'break-inside';\n    }\n\n    if (prop.includes('before')) {\n      return 'break-before';\n    }\n\n    return 'break-after';\n  }\n  /**\n   * Change prefixed value for avoid-column and avoid-page\n   */\n\n\n  set(decl, prefix) {\n    if (decl.prop === 'break-inside' && decl.value === 'avoid-column' || decl.value === 'avoid-page') {\n      decl.value = 'avoid';\n    }\n\n    return super.set(decl, prefix);\n  }\n  /**\n   * Don’t prefix some values\n   */\n\n\n  insert(decl, prefix, prefixes) {\n    if (decl.prop !== 'break-inside') {\n      return super.insert(decl, prefix, prefixes);\n    }\n\n    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n      return undefined;\n    }\n\n    return super.insert(decl, prefix, prefixes);\n  }\n\n}\n\nBreakProps.names = ['break-inside', 'page-break-inside', 'column-break-inside', 'break-before', 'page-break-before', 'column-break-before', 'break-after', 'page-break-after', 'column-break-after'];\nmodule.exports = BreakProps;","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/node_modules/autoprefixer/lib/hacks/break-props.js"],"names":["Declaration","require","BreakProps","prefixed","prop","prefix","normalize","includes","set","decl","value","insert","prefixes","test","undefined","names","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAMC,UAAN,SAAyBF,WAAzB,CAAqC;AACnC;AACF;AACA;AACEG,EAAAA,QAAQ,CAAEC,IAAF,EAAQC,MAAR,EAAgB;AACtB,WAAQ,GAAEA,MAAO,UAASD,IAAK,EAA/B;AACD;AAED;AACF;AACA;;;AACEE,EAAAA,SAAS,CAAEF,IAAF,EAAQ;AACf,QAAIA,IAAI,CAACG,QAAL,CAAc,QAAd,CAAJ,EAA6B;AAC3B,aAAO,cAAP;AACD;;AACD,QAAIH,IAAI,CAACG,QAAL,CAAc,QAAd,CAAJ,EAA6B;AAC3B,aAAO,cAAP;AACD;;AACD,WAAO,aAAP;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,GAAG,CAAEC,IAAF,EAAQJ,MAAR,EAAgB;AACjB,QACGI,IAAI,CAACL,IAAL,KAAc,cAAd,IAAgCK,IAAI,CAACC,KAAL,KAAe,cAAhD,IACAD,IAAI,CAACC,KAAL,KAAe,YAFjB,EAGE;AACAD,MAAAA,IAAI,CAACC,KAAL,GAAa,OAAb;AACD;;AACD,WAAO,MAAMF,GAAN,CAAUC,IAAV,EAAgBJ,MAAhB,CAAP;AACD;AAED;AACF;AACA;;;AACEM,EAAAA,MAAM,CAAEF,IAAF,EAAQJ,MAAR,EAAgBO,QAAhB,EAA0B;AAC9B,QAAIH,IAAI,CAACL,IAAL,KAAc,cAAlB,EAAkC;AAChC,aAAO,MAAMO,MAAN,CAAaF,IAAb,EAAmBJ,MAAnB,EAA2BO,QAA3B,CAAP;AACD;;AACD,QAAI,UAAUC,IAAV,CAAeJ,IAAI,CAACC,KAApB,KAA8B,QAAQG,IAAR,CAAaJ,IAAI,CAACC,KAAlB,CAAlC,EAA4D;AAC1D,aAAOI,SAAP;AACD;;AACD,WAAO,MAAMH,MAAN,CAAaF,IAAb,EAAmBJ,MAAnB,EAA2BO,QAA3B,CAAP;AACD;;AA7CkC;;AAgDrCV,UAAU,CAACa,KAAX,GAAmB,CACjB,cADiB,EAEjB,mBAFiB,EAGjB,qBAHiB,EAIjB,cAJiB,EAKjB,mBALiB,EAMjB,qBANiB,EAOjB,aAPiB,EAQjB,kBARiB,EASjB,oBATiB,CAAnB;AAYAC,MAAM,CAACC,OAAP,GAAiBf,UAAjB","sourcesContent":["let Declaration = require('../declaration')\n\nclass BreakProps extends Declaration {\n  /**\n   * Change name for -webkit- and -moz- prefix\n   */\n  prefixed (prop, prefix) {\n    return `${prefix}column-${prop}`\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize (prop) {\n    if (prop.includes('inside')) {\n      return 'break-inside'\n    }\n    if (prop.includes('before')) {\n      return 'break-before'\n    }\n    return 'break-after'\n  }\n\n  /**\n   * Change prefixed value for avoid-column and avoid-page\n   */\n  set (decl, prefix) {\n    if (\n      (decl.prop === 'break-inside' && decl.value === 'avoid-column') ||\n      decl.value === 'avoid-page'\n    ) {\n      decl.value = 'avoid'\n    }\n    return super.set(decl, prefix)\n  }\n\n  /**\n   * Don’t prefix some values\n   */\n  insert (decl, prefix, prefixes) {\n    if (decl.prop !== 'break-inside') {\n      return super.insert(decl, prefix, prefixes)\n    }\n    if (/region/i.test(decl.value) || /page/i.test(decl.value)) {\n      return undefined\n    }\n    return super.insert(decl, prefix, prefixes)\n  }\n}\n\nBreakProps.names = [\n  'break-inside',\n  'page-break-inside',\n  'column-break-inside',\n  'break-before',\n  'page-break-before',\n  'column-break-before',\n  'break-after',\n  'page-break-after',\n  'column-break-after'\n]\n\nmodule.exports = BreakProps\n"]},"metadata":{},"sourceType":"script"}