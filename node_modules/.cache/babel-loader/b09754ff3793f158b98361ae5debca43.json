{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/PrivateRouter.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\n\nfunction PrivateRoute({\n  children,\n  ...rest\n}) {\n  const {\n    signIn\n  } = rest.authState;\n  const {\n    path,\n    location\n  } = rest;\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    location: location,\n    render: () => {\n      return signIn ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: path\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PrivateRoute;\nPrivateRoute.defaultProps = {\n  children: {}\n};\nPrivateRoute.propTypes = {\n  children: PropTypes.objectOf(PropTypes.object)\n};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/PrivateRouter.js"],"names":["React","connect","Route","Redirect","PropTypes","PrivateRoute","children","rest","signIn","authState","path","location","pathname","state","from","defaultProps","propTypes","objectOf","object","mapStateToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,SAAT,QAA0B,YAA1B;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAtB,EAA6C;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,IAAI,CAACE,SAAxB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqBJ,IAA3B;AACA,sBACE,QAAC,KAAD;AACE,IAAA,IAAI,EAAEG,IADR;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,MAAM,EAAE,MAAM;AACZ,aAAOH,MAAM,GACXF,QADW,gBAGX,QAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFM,UAAAA,QAAQ,EAAE,QADR;AAEFC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEJ;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,cAHF;AAUD;AAdH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;KArBQL,Y;AAuBTA,YAAY,CAACU,YAAb,GAA4B;AAC1BT,EAAAA,QAAQ,EAAE;AADgB,CAA5B;AAIAD,YAAY,CAACW,SAAb,GAAyB;AACvBV,EAAAA,QAAQ,EAAEF,SAAS,CAACa,QAAV,CAAmBb,SAAS,CAACc,MAA7B;AADa,CAAzB;;AAIA,MAAMC,eAAe,GAAIN,KAAD,KAAY;AAClCJ,EAAAA,SAAS,EAAEI,KAAK,CAACJ;AADiB,CAAZ,CAAxB;;AAIA,eAAeR,OAAO,CAACkB,eAAD,CAAP,CAAyBd,YAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { PropTypes } from \"prop-types\";\n\nfunction PrivateRoute({ children, ...rest }) {\n  const { signIn } = rest.authState;\n  const { path, location } = rest;\n  return (\n    <Route\n      path={path}\n      location={location}\n      render={() => {\n        return signIn ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: path },\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n\nPrivateRoute.defaultProps = {\n  children: {},\n};\n\nPrivateRoute.propTypes = {\n  children: PropTypes.objectOf(PropTypes.object),\n};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}