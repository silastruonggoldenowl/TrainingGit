{"ast":null,"code":"let Declaration = require('../declaration');\n\nclass UserSelect extends Declaration {\n  /**\n   * Change prefixed value for IE\n   */\n  set(decl, prefix) {\n    if (prefix === '-ms-' && decl.value === 'contain') {\n      decl.value = 'element';\n    }\n\n    return super.set(decl, prefix);\n  }\n  /**\n   * Avoid prefixing all in IE\n   */\n\n\n  insert(decl, prefix, prefixes) {\n    if (decl.value === 'all' && prefix === '-ms-') {\n      return undefined;\n    } else {\n      return super.insert(decl, prefix, prefixes);\n    }\n  }\n\n}\n\nUserSelect.names = ['user-select'];\nmodule.exports = UserSelect;","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/node_modules/autoprefixer/lib/hacks/user-select.js"],"names":["Declaration","require","UserSelect","set","decl","prefix","value","insert","prefixes","undefined","names","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAMC,UAAN,SAAyBF,WAAzB,CAAqC;AACnC;AACF;AACA;AACEG,EAAAA,GAAG,CAAEC,IAAF,EAAQC,MAAR,EAAgB;AACjB,QAAIA,MAAM,KAAK,MAAX,IAAqBD,IAAI,CAACE,KAAL,KAAe,SAAxC,EAAmD;AACjDF,MAAAA,IAAI,CAACE,KAAL,GAAa,SAAb;AACD;;AACD,WAAO,MAAMH,GAAN,CAAUC,IAAV,EAAgBC,MAAhB,CAAP;AACD;AAED;AACF;AACA;;;AACEE,EAAAA,MAAM,CAAEH,IAAF,EAAQC,MAAR,EAAgBG,QAAhB,EAA0B;AAC9B,QAAIJ,IAAI,CAACE,KAAL,KAAe,KAAf,IAAwBD,MAAM,KAAK,MAAvC,EAA+C;AAC7C,aAAOI,SAAP;AACD,KAFD,MAEO;AACL,aAAO,MAAMF,MAAN,CAAaH,IAAb,EAAmBC,MAAnB,EAA2BG,QAA3B,CAAP;AACD;AACF;;AApBkC;;AAuBrCN,UAAU,CAACQ,KAAX,GAAmB,CAAC,aAAD,CAAnB;AAEAC,MAAM,CAACC,OAAP,GAAiBV,UAAjB","sourcesContent":["let Declaration = require('../declaration')\n\nclass UserSelect extends Declaration {\n  /**\n   * Change prefixed value for IE\n   */\n  set (decl, prefix) {\n    if (prefix === '-ms-' && decl.value === 'contain') {\n      decl.value = 'element'\n    }\n    return super.set(decl, prefix)\n  }\n\n  /**\n   * Avoid prefixing all in IE\n   */\n  insert (decl, prefix, prefixes) {\n    if (decl.value === 'all' && prefix === '-ms-') {\n      return undefined\n    } else {\n      return super.insert(decl, prefix, prefixes)\n    }\n  }\n}\n\nUserSelect.names = ['user-select']\n\nmodule.exports = UserSelect\n"]},"metadata":{},"sourceType":"script"}