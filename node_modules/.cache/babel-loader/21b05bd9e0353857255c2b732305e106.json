{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\"; // import { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\nconst routesConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false\n  },\n  test: {\n    path: \"/test\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 22\n    }, this),\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => {\n          const a = {};\n          console.log(a.b.c);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"test Sentry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 18\n          }, this);\n        }\n      }\n    }\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 22\n    }, this),\n    privateRoute: false\n  }\n};\n\nfunction RouteConfig(props) {\n  console.log(props); // const { authState, routes } = props;\n  // const route = routes;\n  // return (\n  //   <Route\n  //     path={route.path}\n  //     render={() => {\n  //       return !(route.privateRoute && !authState.signIn) ? (\n  //         <>\n  //           <route.component component={route.component} />\n  //           {route.routes && (\n  //             <Switch>\n  //               {Object.values(route.routes).map((prop) => (\n  //                 <RouteConfig\n  //                   key={prop.path}\n  //                   path={prop.path}\n  //                   component={prop.component}\n  //                   privateRoute={prop.privateRoute}\n  //                   routes={prop.routes}\n  //                 />\n  //               ))}\n  //             </Switch>\n  //           )}\n  //         </>\n  //       ) : (\n  //         <Redirect\n  //           to={{\n  //             pathname: routesConfig.login.path,\n  //             state: { from: route.path },\n  //           }}\n  //         />\n  //       );\n  //     }}\n  //   />\n  // );\n}\n\n_c = RouteConfig;\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  },\n  routes: undefined\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  }),\n  routes: PropTypes.objectOf(PropTypes.objectOf)\n}; // RouteWithSubRoutes.defaultProps = {};\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteConfig\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","PropTypes","Login","Todos","routesConfig","login","path","component","privateRoute","test","routes","testSentry","a","console","log","b","c","home","noMatch","RouteConfig","props","defaultProps","authState","signIn","undefined","propTypes","exact","bool","objectOf","mapStateToProps","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,SAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAE,QADD;AAELC,IAAAA,SAAS,EAAEL,KAFN;AAGLM,IAAAA,YAAY,EAAE;AAHT,GADY;AAMnBC,EAAAA,IAAI,EAAE;AACJH,IAAAA,IAAI,EAAE,OADF;AAEJC,IAAAA,SAAS,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFb;AAGJG,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAE;AACVL,QAAAA,IAAI,EAAE,cADI;AAEVC,QAAAA,SAAS,EAAE,MAAM;AACf,gBAAMK,CAAC,GAAG,EAAV;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,CAAF,CAAIC,CAAhB;AACA,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AANS;AADN;AAHJ,GANa;AAoBnBC,EAAAA,IAAI,EAAE;AACJX,IAAAA,IAAI,EAAE,GADF;AAEJC,IAAAA,SAAS,EAAEJ,KAFP;AAGJK,IAAAA,YAAY,EAAE;AAHV,GApBa;AAyBnBU,EAAAA,OAAO,EAAE;AACPZ,IAAAA,IAAI,EAAE,GADC;AAEPC,IAAAA,SAAS,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFV;AAGPC,IAAAA,YAAY,EAAE;AAHP;AAzBU,CAArB;;AAgCA,SAASW,WAAT,CAAqBC,KAArB,EAA4B;AAC1BP,EAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ,EAD0B,CAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;KApCQD,W;AAsCTA,WAAW,CAACE,YAAZ,GAA2B;AACzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AADC,GADc;AAIzBb,EAAAA,MAAM,EAAEc;AAJiB,CAA3B;AAOAL,WAAW,CAACM,SAAZ,GAAwB;AACtBH,EAAAA,SAAS,EAAErB,SAAS,CAACyB,KAAV,CAAgB;AACzBH,IAAAA,MAAM,EAAEtB,SAAS,CAAC0B;AADO,GAAhB,CADW;AAItBjB,EAAAA,MAAM,EAAET,SAAS,CAAC2B,QAAV,CAAmB3B,SAAS,CAAC2B,QAA7B;AAJc,CAAxB,C,CAOA;AAEA;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCR,EAAAA,SAAS,EAAEQ,KAAK,CAACR;AADiB,CAAZ,CAAxB;;AAIA,eAAetB,OAAO,CAAC6B,eAAD,CAAP,CAAyBV,WAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n// import { Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst routesConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false,\n  },\n  test: {\n    path: \"/test\",\n    component: () => <div>Test</div>,\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => {\n          const a = {};\n          console.log(a.b.c);\n          return <div>test Sentry</div>;\n        },\n      },\n    },\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true,\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => <div>No Match</div>,\n    privateRoute: false,\n  },\n};\n\nfunction RouteConfig(props) {\n  console.log(props);\n  // const { authState, routes } = props;\n  // const route = routes;\n  // return (\n  //   <Route\n  //     path={route.path}\n  //     render={() => {\n  //       return !(route.privateRoute && !authState.signIn) ? (\n  //         <>\n  //           <route.component component={route.component} />\n  //           {route.routes && (\n  //             <Switch>\n  //               {Object.values(route.routes).map((prop) => (\n  //                 <RouteConfig\n  //                   key={prop.path}\n  //                   path={prop.path}\n  //                   component={prop.component}\n  //                   privateRoute={prop.privateRoute}\n  //                   routes={prop.routes}\n  //                 />\n  //               ))}\n  //             </Switch>\n  //           )}\n  //         </>\n  //       ) : (\n  //         <Redirect\n  //           to={{\n  //             pathname: routesConfig.login.path,\n  //             state: { from: route.path },\n  //           }}\n  //         />\n  //       );\n  //     }}\n  //   />\n  // );\n}\n\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n  routes: undefined,\n};\n\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n  routes: PropTypes.objectOf(PropTypes.objectOf),\n};\n\n// RouteWithSubRoutes.defaultProps = {};\n\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}