{"ast":null,"code":"let Declaration = require('../declaration');\n\nlet utils = require('./grid-utils');\n\nclass GridRowColumn extends Declaration {\n  /**\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\n   */\n  insert(decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes);\n    let values = utils.parse(decl);\n    let [start, span] = utils.translate(values, 0, 1);\n    let hasStartValueSpan = values[0] && values[0].includes('span');\n\n    if (hasStartValueSpan) {\n      span = values[0].join('').replace(/\\D/g, '');\n    }\n\n    ;\n    [[decl.prop, start], [`${decl.prop}-span`, span]].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value);\n    });\n    return undefined;\n  }\n\n}\n\nGridRowColumn.names = ['grid-row', 'grid-column'];\nmodule.exports = GridRowColumn;","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/node_modules/autoprefixer/lib/hacks/grid-row-column.js"],"names":["Declaration","require","utils","GridRowColumn","insert","decl","prefix","prefixes","values","parse","start","span","translate","hasStartValueSpan","includes","join","replace","prop","forEach","value","insertDecl","undefined","names","module","exports"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AAEA,MAAME,aAAN,SAA4BH,WAA5B,CAAwC;AACtC;AACF;AACA;AACEI,EAAAA,MAAM,CAAEC,IAAF,EAAQC,MAAR,EAAgBC,QAAhB,EAA0B;AAC9B,QAAID,MAAM,KAAK,MAAf,EAAuB,OAAO,MAAMF,MAAN,CAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,QAA3B,CAAP;AAEvB,QAAIC,MAAM,GAAGN,KAAK,CAACO,KAAN,CAAYJ,IAAZ,CAAb;AACA,QAAI,CAACK,KAAD,EAAQC,IAAR,IAAgBT,KAAK,CAACU,SAAN,CAAgBJ,MAAhB,EAAwB,CAAxB,EAA2B,CAA3B,CAApB;AAEA,QAAIK,iBAAiB,GAAGL,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAAC,CAAD,CAAN,CAAUM,QAAV,CAAmB,MAAnB,CAArC;;AAEA,QAAID,iBAAJ,EAAuB;AACrBF,MAAAA,IAAI,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAUO,IAAV,CAAe,EAAf,EAAmBC,OAAnB,CAA2B,KAA3B,EAAkC,EAAlC,CAAP;AACD;;AAED;AAAC,KACC,CAACX,IAAI,CAACY,IAAN,EAAYP,KAAZ,CADD,EAEC,CAAE,GAAEL,IAAI,CAACY,IAAK,OAAd,EAAsBN,IAAtB,CAFD,EAGCO,OAHD,CAGS,CAAC,CAACD,IAAD,EAAOE,KAAP,CAAD,KAAmB;AAC3BjB,MAAAA,KAAK,CAACkB,UAAN,CAAiBf,IAAjB,EAAuBY,IAAvB,EAA6BE,KAA7B;AACD,KALA;AAOD,WAAOE,SAAP;AACD;;AAxBqC;;AA2BxClB,aAAa,CAACmB,KAAd,GAAsB,CAAC,UAAD,EAAa,aAAb,CAAtB;AAEAC,MAAM,CAACC,OAAP,GAAiBrB,aAAjB","sourcesContent":["let Declaration = require('../declaration')\nlet utils = require('./grid-utils')\n\nclass GridRowColumn extends Declaration {\n  /**\n   * Translate grid-row / grid-column to separate -ms- prefixed properties\n   */\n  insert (decl, prefix, prefixes) {\n    if (prefix !== '-ms-') return super.insert(decl, prefix, prefixes)\n\n    let values = utils.parse(decl)\n    let [start, span] = utils.translate(values, 0, 1)\n\n    let hasStartValueSpan = values[0] && values[0].includes('span')\n\n    if (hasStartValueSpan) {\n      span = values[0].join('').replace(/\\D/g, '')\n    }\n\n    ;[\n      [decl.prop, start],\n      [`${decl.prop}-span`, span]\n    ].forEach(([prop, value]) => {\n      utils.insertDecl(decl, prop, value)\n    })\n\n    return undefined\n  }\n}\n\nGridRowColumn.names = ['grid-row', 'grid-column']\n\nmodule.exports = GridRowColumn\n"]},"metadata":{},"sourceType":"script"}