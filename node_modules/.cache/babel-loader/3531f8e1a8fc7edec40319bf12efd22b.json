{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\nconst routesConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false\n  },\n  test: {\n    path: \"/test\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }, this),\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => {\n          const a = {};\n          console.log(a.b.c);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"test Sentry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 18\n          }, this);\n        }\n      }\n    }\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }, this),\n    privateRoute: false\n  }\n};\n\nfunction RouteWithSubRoutes(route) {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path,\n    render: () => {\n      return !route.privateRoute ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(route.component, {\n          component: route.component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), route.routes && /*#__PURE__*/_jsxDEV(Router, {\n          children: /*#__PURE__*/_jsxDEV(Switch, {\n            children: Object.values(route.routes).map(prop => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, {\n              path: prop.path,\n              component: prop.component,\n              privateRoute: prop.privateRoute,\n              routes: prop.routes\n            }, prop.path, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: routesConfig.login.path,\n          state: {\n            from: route.path\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RouteWithSubRoutes;\n\nfunction RouteConfig(props) {\n  // eslint-disable-next-line no-unused-vars\n  const {\n    authState,\n    route\n  } = props;\n\n  if (route) {\n    return /*#__PURE__*/_jsxDEV(Route, {\n      path: route.path,\n      render: () => {\n        // eslint-disable-next-line no-constant-condition\n        return true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(route.component, {\n            component: route.component\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this), route.routes && /*#__PURE__*/_jsxDEV(Router, {\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: Object.values(route.routes).map(prop => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, {\n                path: prop.path,\n                component: prop.component,\n                privateRoute: prop.privateRoute,\n                routes: prop.routes\n              }, prop.path, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: routesConfig.login.path,\n            state: {\n              from: route.path\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: Object.values(routesConfig).map(prop => /*#__PURE__*/_jsxDEV(RouteConfig, {\n        route: prop\n      }, prop.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RouteConfig;\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  },\n  route: undefined\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  }),\n  route: PropTypes.objectOf(PropTypes.object)\n}; // RouteWithSubRoutes.defaultProps = {};\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RouteWithSubRoutes\");\n$RefreshReg$(_c2, \"RouteConfig\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","BrowserRouter","Router","Switch","Route","Redirect","PropTypes","Login","Todos","routesConfig","login","path","component","privateRoute","test","routes","testSentry","a","console","log","b","c","home","noMatch","RouteWithSubRoutes","route","Object","values","map","prop","pathname","state","from","RouteConfig","props","authState","defaultProps","signIn","undefined","propTypes","exact","bool","objectOf","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst routesConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false,\n  },\n  test: {\n    path: \"/test\",\n    component: () => <div>Test</div>,\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => {\n          const a = {};\n          console.log(a.b.c);\n          return <div>test Sentry</div>;\n        },\n      },\n    },\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true,\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => <div>No Match</div>,\n    privateRoute: false,\n  },\n};\n\nfunction RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={() => {\n        return !route.privateRoute ? (\n          <>\n            <route.component component={route.component} />\n            {route.routes && (\n              <Router>\n                <Switch>\n                  {Object.values(route.routes).map((prop) => (\n                    <RouteWithSubRoutes\n                      key={prop.path}\n                      path={prop.path}\n                      component={prop.component}\n                      privateRoute={prop.privateRoute}\n                      routes={prop.routes}\n                    />\n                  ))}\n                </Switch>\n              </Router>\n            )}\n          </>\n        ) : (\n          <Redirect\n            to={{\n              pathname: routesConfig.login.path,\n              state: { from: route.path },\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n\nfunction RouteConfig(props) {\n  // eslint-disable-next-line no-unused-vars\n  const { authState, route } = props;\n  if (route) {\n    return (\n      <Route\n        path={route.path}\n        render={() => {\n          // eslint-disable-next-line no-constant-condition\n          return true ? (\n            <>\n              <route.component component={route.component} />\n              {route.routes && (\n                <Router>\n                  <Switch>\n                    {Object.values(route.routes).map((prop) => (\n                      <RouteWithSubRoutes\n                        key={prop.path}\n                        path={prop.path}\n                        component={prop.component}\n                        privateRoute={prop.privateRoute}\n                        routes={prop.routes}\n                      />\n                    ))}\n                  </Switch>\n                </Router>\n              )}\n            </>\n          ) : (\n            <Redirect\n              to={{\n                pathname: routesConfig.login.path,\n                state: { from: route.path },\n              }}\n            />\n          );\n        }}\n      />\n    );\n  }\n  return (\n    <Router>\n      <Switch>\n        {Object.values(routesConfig).map((prop) => (\n          <RouteConfig key={prop.path} route={prop} />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n  route: undefined,\n};\n\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n  route: PropTypes.objectOf(PropTypes.object),\n};\n\n// RouteWithSubRoutes.defaultProps = {};\n\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}