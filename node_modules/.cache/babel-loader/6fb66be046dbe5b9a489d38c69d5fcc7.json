{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\nconst routesConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false\n  },\n  register: {\n    path: \"/register\",\n    component: Login,\n    privateRoute: false\n  },\n  test: {\n    path: \"/test\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 22\n    }, this),\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => {\n          const a = {};\n          console.log(a.b.c);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"test Sentry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 18\n          }, this);\n        }\n      }\n    }\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 22\n    }, this),\n    privateRoute: false\n  }\n};\n\nfunction RouteWithSubRoutes(route) {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path,\n    render: () => {\n      return !route.privateRoute ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(route.component, {\n          component: route.component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), route.routes && /*#__PURE__*/_jsxDEV(RouteConfig, {\n          routes: route.routes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: routesConfig.login.path,\n          state: {\n            from: route.path\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RouteWithSubRoutes;\n\nfunction RouteConfig(props) {\n  const {\n    authState,\n    routes\n  } = props;\n  const routesParam = routes || routesConfig;\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: Object.values(routesParam).map(route => /*#__PURE__*/_jsxDEV(RouteWithSubRoutes, {\n        path: route.path,\n        component: route.component,\n        privateRoute: route.privateRoute && !authState.signIn,\n        routes: route.routes\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = RouteConfig;\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  },\n  routes: undefined\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  }),\n  routes: PropTypes.objectOf(PropTypes.object)\n}; // RouteWithSubRoutes.defaultProps = {};\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RouteWithSubRoutes\");\n$RefreshReg$(_c2, \"RouteConfig\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","BrowserRouter","Router","Switch","Route","Redirect","PropTypes","Login","Todos","routesConfig","login","path","component","privateRoute","register","test","routes","testSentry","a","console","log","b","c","home","noMatch","RouteWithSubRoutes","route","pathname","state","from","RouteConfig","props","authState","routesParam","Object","values","map","signIn","defaultProps","undefined","propTypes","exact","bool","objectOf","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst routesConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false,\n  },\n  register: {\n    path: \"/register\",\n    component: Login,\n    privateRoute: false,\n  },\n  test: {\n    path: \"/test\",\n    component: () => <div>Test</div>,\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => {\n          const a = {};\n          console.log(a.b.c);\n          return <div>test Sentry</div>;\n        },\n      },\n    },\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true,\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => <div>No Match</div>,\n    privateRoute: false,\n  },\n};\n\nfunction RouteWithSubRoutes(route) {\n  return (\n    <Route\n      path={route.path}\n      render={() => {\n        return !route.privateRoute ? (\n          <>\n            <route.component component={route.component} />\n            {route.routes && <RouteConfig routes={route.routes} />}\n          </>\n        ) : (\n          <Redirect\n            to={{\n              pathname: routesConfig.login.path,\n              state: { from: route.path },\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n\nfunction RouteConfig(props) {\n  const { authState, routes } = props;\n  const routesParam = routes || routesConfig;\n  return (\n    <Router>\n      <Switch>\n        {Object.values(routesParam).map((route) => (\n          <RouteWithSubRoutes\n            key={route.path}\n            path={route.path}\n            component={route.component}\n            privateRoute={route.privateRoute && !authState.signIn}\n            routes={route.routes}\n          />\n        ))}\n      </Switch>\n    </Router>\n  );\n}\n\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n  routes: undefined,\n};\n\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n  routes: PropTypes.objectOf(PropTypes.object),\n};\n\n// RouteWithSubRoutes.defaultProps = {};\n\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}