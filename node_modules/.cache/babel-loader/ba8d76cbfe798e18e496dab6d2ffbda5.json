{"ast":null,"code":"let flexSpec = require('./flex-spec');\n\nlet Declaration = require('../declaration');\n\nclass Flex extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex';\n  }\n  /**\n   * Return flex property for 2009 and 2012 specs\n   */\n\n\n  prefixed(prop, prefix) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n\n    if (spec === 2009) {\n      return prefix + 'box-flex';\n    }\n\n    if (spec === 2012) {\n      return prefix + 'flex-positive';\n    }\n\n    return super.prefixed(prop, prefix);\n  }\n\n}\n\nFlex.names = ['flex-grow', 'flex-positive'];\nmodule.exports = Flex;","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/node_modules/autoprefixer/lib/hacks/flex-grow.js"],"names":["flexSpec","require","Declaration","Flex","normalize","prefixed","prop","prefix","spec","names","module","exports"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAME,IAAN,SAAmBD,WAAnB,CAA+B;AAC7B;AACF;AACA;AACEE,EAAAA,SAAS,GAAI;AACX,WAAO,MAAP;AACD;AAED;AACF;AACA;;;AACEC,EAAAA,QAAQ,CAAEC,IAAF,EAAQC,MAAR,EAAgB;AACtB,QAAIC,IAAJ;AACC,KAACA,IAAD,EAAOD,MAAP,IAAiBP,QAAQ,CAACO,MAAD,CAAzB;;AACD,QAAIC,IAAI,KAAK,IAAb,EAAmB;AACjB,aAAOD,MAAM,GAAG,UAAhB;AACD;;AACD,QAAIC,IAAI,KAAK,IAAb,EAAmB;AACjB,aAAOD,MAAM,GAAG,eAAhB;AACD;;AACD,WAAO,MAAMF,QAAN,CAAeC,IAAf,EAAqBC,MAArB,CAAP;AACD;;AArB4B;;AAwB/BJ,IAAI,CAACM,KAAL,GAAa,CAAC,WAAD,EAAc,eAAd,CAAb;AAEAC,MAAM,CAACC,OAAP,GAAiBR,IAAjB","sourcesContent":["let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Flex extends Declaration {\n  /**\n   * Return property name by final spec\n   */\n  normalize () {\n    return 'flex'\n  }\n\n  /**\n   * Return flex property for 2009 and 2012 specs\n   */\n  prefixed (prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-flex'\n    }\n    if (spec === 2012) {\n      return prefix + 'flex-positive'\n    }\n    return super.prefixed(prop, prefix)\n  }\n}\n\nFlex.names = ['flex-grow', 'flex-positive']\n\nmodule.exports = Flex\n"]},"metadata":{},"sourceType":"script"}