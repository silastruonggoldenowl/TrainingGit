{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\nconst routesConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false\n  },\n  test: {\n    path: \"/test\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }, this),\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => {\n          const a = {};\n          console.log(a.b.c);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"test Sentry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 18\n          }, this);\n        }\n      }\n    }\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }, this),\n    privateRoute: false\n  }\n}; // function RouteWithSubRoutes(route) {\n//   return (\n//     <Route\n//       path={route.path}\n//       render={() => {\n//         return !route.privateRoute ? (\n//           <>\n//             <route.component component={route.component} />\n//             {route.routes && (\n//               <Switch>\n//                 {Object.values(route.routes).map((prop) => (\n//                   <RouteWithSubRoutes\n//                     key={prop.path}\n//                     path={prop.path}\n//                     component={prop.component}\n//                     privateRoute={prop.privateRoute}\n//                     routes={prop.routes}\n//                   />\n//                 ))}\n//               </Switch>\n//             )}\n//           </>\n//         ) : (\n//           <Redirect\n//             to={{\n//               pathname: routesConfig.login.path,\n//               state: { from: route.path },\n//             }}\n//           />\n//         );\n//       }}\n//     />\n//   );\n// }\n\nfunction RouteConfig(props) {\n  const {\n    authState,\n    route\n  } = props;\n  console.log(authState);\n  return route ? /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: Object.values(routesConfig).map(prop => /*#__PURE__*/_jsxDEV(RouteConfig, {\n        route: prop\n      }, prop.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Route, {\n    path: route.path || 0,\n    render: () => {\n      return true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(route.component, {\n          component: route.component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), route.routes && /*#__PURE__*/_jsxDEV(Switch, {\n          children: Object.values(route.routes).map(prop => /*#__PURE__*/_jsxDEV(RouteConfig, {\n            route: prop\n          }, prop.path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: routesConfig.login.path,\n          state: {\n            from: route.path\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RouteConfig;\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false\n  },\n  route: undefined\n};\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool\n  }),\n  route: PropTypes.objectOf(PropTypes.object)\n}; // RouteWithSubRoutes.defaultProps = {};\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = state => ({\n  authState: state.authState\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n\nvar _c;\n\n$RefreshReg$(_c, \"RouteConfig\");","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/router.js"],"names":["React","connect","BrowserRouter","Router","Switch","Route","Redirect","PropTypes","Login","Todos","routesConfig","login","path","component","privateRoute","test","routes","testSentry","a","console","log","b","c","home","noMatch","RouteConfig","props","authState","route","Object","values","map","prop","pathname","state","from","defaultProps","signIn","undefined","propTypes","exact","bool","objectOf","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { Login, Todos } from \"./pages\";\n\nconst routesConfig = {\n  login: {\n    path: \"/login\",\n    component: Login,\n    privateRoute: false,\n  },\n  test: {\n    path: \"/test\",\n    component: () => <div>Test</div>,\n    routes: {\n      testSentry: {\n        path: \"/test/sentry\",\n        component: () => {\n          const a = {};\n          console.log(a.b.c);\n          return <div>test Sentry</div>;\n        },\n      },\n    },\n  },\n  home: {\n    path: \"/\",\n    component: Todos,\n    privateRoute: true,\n  },\n  noMatch: {\n    path: \"*\",\n    component: () => <div>No Match</div>,\n    privateRoute: false,\n  },\n};\n\n// function RouteWithSubRoutes(route) {\n//   return (\n//     <Route\n//       path={route.path}\n//       render={() => {\n//         return !route.privateRoute ? (\n//           <>\n//             <route.component component={route.component} />\n//             {route.routes && (\n//               <Switch>\n//                 {Object.values(route.routes).map((prop) => (\n//                   <RouteWithSubRoutes\n//                     key={prop.path}\n//                     path={prop.path}\n//                     component={prop.component}\n//                     privateRoute={prop.privateRoute}\n//                     routes={prop.routes}\n//                   />\n//                 ))}\n//               </Switch>\n//             )}\n//           </>\n//         ) : (\n//           <Redirect\n//             to={{\n//               pathname: routesConfig.login.path,\n//               state: { from: route.path },\n//             }}\n//           />\n//         );\n//       }}\n//     />\n//   );\n// }\n\nfunction RouteConfig(props) {\n  const { authState, route } = props;\n  console.log(authState);\n  return route ? (\n    <Router>\n      <Switch>\n        {Object.values(routesConfig).map((prop) => (\n          <RouteConfig key={prop.path} route={prop} />\n        ))}\n      </Switch>\n    </Router>\n  ) : (\n    <Route\n      path={route.path || 0}\n      render={() => {\n        return true ? (\n          <>\n            <route.component component={route.component} />\n            {route.routes && (\n              <Switch>\n                {Object.values(route.routes).map((prop) => (\n                  <RouteConfig key={prop.path} route={prop} />\n                ))}\n              </Switch>\n            )}\n          </>\n        ) : (\n          <Redirect\n            to={{\n              pathname: routesConfig.login.path,\n              state: { from: route.path },\n            }}\n          />\n        );\n      }}\n    />\n  );\n}\n\nRouteConfig.defaultProps = {\n  authState: {\n    signIn: false,\n  },\n  route: undefined,\n};\n\nRouteConfig.propTypes = {\n  authState: PropTypes.exact({\n    signIn: PropTypes.bool,\n  }),\n  route: PropTypes.objectOf(PropTypes.object),\n};\n\n// RouteWithSubRoutes.defaultProps = {};\n\n// RouteWithSubRoutes.propTypes = {};\n\nconst mapStateToProps = (state) => ({\n  authState: state.authState,\n});\n\nexport default connect(mapStateToProps)(RouteConfig);\n"]},"metadata":{},"sourceType":"module"}