{"ast":null,"code":"import * as Sentry from \"@sentry/react\";\nimport SentryCli from \"@sentry/cli\";\nimport { execFile } from \"child_process\";\n\nasync function createReleaseAndUpload() {\n  const release = process.env.REACT_APP_SENTRY_RELEASE;\n  const sentryCliPath = SentryCli.getPath;\n\n  if (!release) {\n    console.warn(\"REACT_APP_SENTRY_RELEASE is not set\");\n    return;\n  }\n\n  const customSentryCli = new SentryCli();\n  execFile(sentryCliPath, [\"info\"], e => {\n    console.log(e);\n  });\n  customSentryCli.releases.new(\"release\").then(item => {\n    console.log(item);\n  }).catch(err => {\n    console.log(err);\n  }); // try {\n  //   console.log(customSentryCli.releases);\n  //   console.log(`Creating sentry release ${release}`);\n  //   await customSentryCli.releases.new(release);\n  //   console.log(\"Uploading source maps\");\n  //   await customSentryCli.releases.uploadSourceMaps(release, {\n  //     include: [\"build/static/js\"],\n  //     urlPrefix: \"~/static/js\",\n  //     rewrite: false,\n  //   });\n  //   console.log(\"Finalizing release\");\n  //   await customSentryCli.releases.finalize(release);\n  // } catch (e) {\n  //   console.error(\"Source maps uploading failed:\", e);\n  // }\n}\n\ncreateReleaseAndUpload();\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN\n});\nexport default Sentry;","map":{"version":3,"sources":["/home/silas/Desktop/Program/goldenOwl/TrainingGit/src/config/configSentry.js"],"names":["Sentry","SentryCli","execFile","createReleaseAndUpload","release","process","env","REACT_APP_SENTRY_RELEASE","sentryCliPath","getPath","console","warn","customSentryCli","e","log","releases","new","then","item","catch","err","init","dsn","REACT_APP_SENTRY_DSN"],"mappings":"AAAA,OAAO,KAAKA,MAAZ,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,QAAT,QAAyB,eAAzB;;AAEA,eAAeC,sBAAf,GAAwC;AACtC,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAA5B;AACA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,OAAhC;;AACA,MAAI,CAACL,OAAL,EAAc;AACZM,IAAAA,OAAO,CAACC,IAAR,CAAa,qCAAb;AAEA;AACD;;AAED,QAAMC,eAAe,GAAG,IAAIX,SAAJ,EAAxB;AACAC,EAAAA,QAAQ,CAACM,aAAD,EAAgB,CAAC,MAAD,CAAhB,EAA2BK,CAAD,IAAO;AACvCH,IAAAA,OAAO,CAACI,GAAR,CAAYD,CAAZ;AACD,GAFO,CAAR;AAGAD,EAAAA,eAAe,CAACG,QAAhB,CACGC,GADH,CACO,SADP,EAEGC,IAFH,CAESC,IAAD,IAAU;AACdR,IAAAA,OAAO,CAACI,GAAR,CAAYI,IAAZ;AACD,GAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACdV,IAAAA,OAAO,CAACI,GAAR,CAAYM,GAAZ;AACD,GAPH,EAbsC,CAqBtC;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACD;;AAEDjB,sBAAsB;AAEtBH,MAAM,CAACqB,IAAP,CAAY;AACVC,EAAAA,GAAG,EAAEjB,OAAO,CAACC,GAAR,CAAYiB;AADP,CAAZ;AAIA,eAAevB,MAAf","sourcesContent":["import * as Sentry from \"@sentry/react\";\nimport SentryCli from \"@sentry/cli\";\nimport { execFile } from \"child_process\";\n\nasync function createReleaseAndUpload() {\n  const release = process.env.REACT_APP_SENTRY_RELEASE;\n  const sentryCliPath = SentryCli.getPath;\n  if (!release) {\n    console.warn(\"REACT_APP_SENTRY_RELEASE is not set\");\n\n    return;\n  }\n\n  const customSentryCli = new SentryCli();\n  execFile(sentryCliPath, [\"info\"], (e) => {\n    console.log(e);\n  });\n  customSentryCli.releases\n    .new(\"release\")\n    .then((item) => {\n      console.log(item);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n  // try {\n  //   console.log(customSentryCli.releases);\n  //   console.log(`Creating sentry release ${release}`);\n  //   await customSentryCli.releases.new(release);\n\n  //   console.log(\"Uploading source maps\");\n  //   await customSentryCli.releases.uploadSourceMaps(release, {\n  //     include: [\"build/static/js\"],\n  //     urlPrefix: \"~/static/js\",\n  //     rewrite: false,\n  //   });\n\n  //   console.log(\"Finalizing release\");\n  //   await customSentryCli.releases.finalize(release);\n  // } catch (e) {\n  //   console.error(\"Source maps uploading failed:\", e);\n  // }\n}\n\ncreateReleaseAndUpload();\n\nSentry.init({\n  dsn: process.env.REACT_APP_SENTRY_DSN,\n});\n\nexport default Sentry;\n"]},"metadata":{},"sourceType":"module"}